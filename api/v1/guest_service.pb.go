// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: v1/guest_service.proto

package guestProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Guest
type Guest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName           string                 `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName            string                 `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email               string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber         string                 `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Language            string                 `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	BirthDate           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	LastVisit           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=lastVisit,proto3" json:"lastVisit,omitempty"`
	TotalVisits         int32                  `protobuf:"varint,9,opt,name=totalVisits,proto3" json:"totalVisits,omitempty"`
	CurrentMood         string                 `protobuf:"bytes,10,opt,name=currentMood,proto3" json:"currentMood,omitempty"`
	TotalSpent          float32                `protobuf:"fixed32,11,opt,name=totalSpent,proto3" json:"totalSpent,omitempty"`
	TotalNoShow         int32                  `protobuf:"varint,12,opt,name=totalNoShow,proto3" json:"totalNoShow,omitempty"`
	TotalCancel         int32                  `protobuf:"varint,13,opt,name=totalCancel,proto3" json:"totalCancel,omitempty"`
	UpcomingReservation string                 `protobuf:"bytes,14,opt,name=upcomingReservation,proto3" json:"upcomingReservation,omitempty"`
	Branches            []*GuestBranchVisits   `protobuf:"bytes,15,rep,name=branches,proto3" json:"branches,omitempty"`
	Tags                []*Tag                 `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty"`
	Notes               []*GuestNote           `protobuf:"bytes,17,rep,name=notes,proto3" json:"notes,omitempty"`
	Address             string                 `protobuf:"bytes,18,opt,name=address,proto3" json:"address,omitempty"`
	Gender              string                 `protobuf:"bytes,19,opt,name=gender,proto3" json:"gender,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Guest) Reset() {
	*x = Guest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest) ProtoMessage() {}

func (x *Guest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest.ProtoReflect.Descriptor instead.
func (*Guest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{0}
}

func (x *Guest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Guest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Guest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Guest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Guest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Guest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Guest) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *Guest) GetLastVisit() *timestamppb.Timestamp {
	if x != nil {
		return x.LastVisit
	}
	return nil
}

func (x *Guest) GetTotalVisits() int32 {
	if x != nil {
		return x.TotalVisits
	}
	return 0
}

func (x *Guest) GetCurrentMood() string {
	if x != nil {
		return x.CurrentMood
	}
	return ""
}

func (x *Guest) GetTotalSpent() float32 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

func (x *Guest) GetTotalNoShow() int32 {
	if x != nil {
		return x.TotalNoShow
	}
	return 0
}

func (x *Guest) GetTotalCancel() int32 {
	if x != nil {
		return x.TotalCancel
	}
	return 0
}

func (x *Guest) GetUpcomingReservation() string {
	if x != nil {
		return x.UpcomingReservation
	}
	return ""
}

func (x *Guest) GetBranches() []*GuestBranchVisits {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *Guest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Guest) GetNotes() []*GuestNote {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *Guest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Guest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Guest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Guest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GuestShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *GuestShort) Reset() {
	*x = GuestShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestShort) ProtoMessage() {}

func (x *GuestShort) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestShort.ProtoReflect.Descriptor instead.
func (*GuestShort) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{1}
}

func (x *GuestShort) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GuestShort) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GuestShort) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GuestShort) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type GuestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName      string       `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName       string       `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email          string       `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber    string       `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Language       string       `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	BirthDate      string       `protobuf:"bytes,7,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	Tags           []*TagParams `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	EmptyEmail     bool         `protobuf:"varint,9,opt,name=emptyEmail,proto3" json:"emptyEmail,omitempty"`
	EmptyLanguage  bool         `protobuf:"varint,10,opt,name=emptyLanguage,proto3" json:"emptyLanguage,omitempty"`
	EmptyBirthdate bool         `protobuf:"varint,11,opt,name=emptyBirthdate,proto3" json:"emptyBirthdate,omitempty"`
	EmptyTags      bool         `protobuf:"varint,12,opt,name=emptyTags,proto3" json:"emptyTags,omitempty"`
	Address        string       `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Gender         string       `protobuf:"bytes,14,opt,name=gender,proto3" json:"gender,omitempty"`
}

func (x *GuestParams) Reset() {
	*x = GuestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestParams) ProtoMessage() {}

func (x *GuestParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestParams.ProtoReflect.Descriptor instead.
func (*GuestParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{2}
}

func (x *GuestParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GuestParams) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GuestParams) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GuestParams) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GuestParams) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GuestParams) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GuestParams) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *GuestParams) GetTags() []*TagParams {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GuestParams) GetEmptyEmail() bool {
	if x != nil {
		return x.EmptyEmail
	}
	return false
}

func (x *GuestParams) GetEmptyLanguage() bool {
	if x != nil {
		return x.EmptyLanguage
	}
	return false
}

func (x *GuestParams) GetEmptyBirthdate() bool {
	if x != nil {
		return x.EmptyBirthdate
	}
	return false
}

func (x *GuestParams) GetEmptyTags() bool {
	if x != nil {
		return x.EmptyTags
	}
	return false
}

func (x *GuestParams) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GuestParams) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category  *TagCategory           `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{3}
}

func (x *Tag) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetCategory() *TagCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Tag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tag) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TagParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId int32 `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
}

func (x *TagParams) Reset() {
	*x = TagParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagParams) ProtoMessage() {}

func (x *TagParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagParams.ProtoReflect.Descriptor instead.
func (*TagParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{4}
}

func (x *TagParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TagParams) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type TagCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color          string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Classification string                 `protobuf:"bytes,4,opt,name=classification,proto3" json:"classification,omitempty"`
	OrderIndex     int32                  `protobuf:"varint,5,opt,name=orderIndex,proto3" json:"orderIndex,omitempty"`
	Tags           []*Tag                 `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TagCategory) Reset() {
	*x = TagCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagCategory) ProtoMessage() {}

func (x *TagCategory) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagCategory.ProtoReflect.Descriptor instead.
func (*TagCategory) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{5}
}

func (x *TagCategory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TagCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TagCategory) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TagCategory) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

func (x *TagCategory) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

func (x *TagCategory) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TagCategory) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TagCategory) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TagCategoryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color          string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Classification string `protobuf:"bytes,4,opt,name=classification,proto3" json:"classification,omitempty"`
	OrderIndex     int32  `protobuf:"varint,5,opt,name=orderIndex,proto3" json:"orderIndex,omitempty"`
}

func (x *TagCategoryParams) Reset() {
	*x = TagCategoryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagCategoryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagCategoryParams) ProtoMessage() {}

func (x *TagCategoryParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagCategoryParams.ProtoReflect.Descriptor instead.
func (*TagCategoryParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{6}
}

func (x *TagCategoryParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TagCategoryParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TagCategoryParams) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TagCategoryParams) GetClassification() string {
	if x != nil {
		return x.Classification
	}
	return ""
}

func (x *TagCategoryParams) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

type GuestBranchVisits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchName string `protobuf:"bytes,1,opt,name=branchName,proto3" json:"branchName,omitempty"`
	Visits     int32  `protobuf:"varint,2,opt,name=visits,proto3" json:"visits,omitempty"`
}

func (x *GuestBranchVisits) Reset() {
	*x = GuestBranchVisits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestBranchVisits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestBranchVisits) ProtoMessage() {}

func (x *GuestBranchVisits) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestBranchVisits.ProtoReflect.Descriptor instead.
func (*GuestBranchVisits) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{7}
}

func (x *GuestBranchVisits) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *GuestBranchVisits) GetVisits() int32 {
	if x != nil {
		return x.Visits
	}
	return 0
}

type GuestNoteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId     int32  `protobuf:"varint,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GuestNoteParams) Reset() {
	*x = GuestNoteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestNoteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestNoteParams) ProtoMessage() {}

func (x *GuestNoteParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestNoteParams.ProtoReflect.Descriptor instead.
func (*GuestNoteParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{8}
}

func (x *GuestNoteParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GuestNoteParams) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *GuestNoteParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GuestNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId     int32                  `protobuf:"varint,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Creator     *CreatorProfile        `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GuestNote) Reset() {
	*x = GuestNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestNote) ProtoMessage() {}

func (x *GuestNote) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestNote.ProtoReflect.Descriptor instead.
func (*GuestNote) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{9}
}

func (x *GuestNote) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GuestNote) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *GuestNote) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GuestNote) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *GuestNote) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GuestNote) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateGuestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *GuestParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CreateGuestRequest) Reset() {
	*x = CreateGuestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuestRequest) ProtoMessage() {}

func (x *CreateGuestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuestRequest.ProtoReflect.Descriptor instead.
func (*CreateGuestRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateGuestRequest) GetParams() *GuestParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateGuestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Guest `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateGuestResponse) Reset() {
	*x = CreateGuestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGuestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGuestResponse) ProtoMessage() {}

func (x *CreateGuestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGuestResponse.ProtoReflect.Descriptor instead.
func (*CreateGuestResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{11}
}

func (x *CreateGuestResponse) GetResult() *Guest {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllGuestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query            string            `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	PaginationParams *PaginationParams `protobuf:"bytes,2,opt,name=paginationParams,proto3" json:"paginationParams,omitempty"`
}

func (x *GetAllGuestsRequest) Reset() {
	*x = GetAllGuestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestsRequest) ProtoMessage() {}

func (x *GetAllGuestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestsRequest.ProtoReflect.Descriptor instead.
func (*GetAllGuestsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllGuestsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetAllGuestsRequest) GetPaginationParams() *PaginationParams {
	if x != nil {
		return x.PaginationParams
	}
	return nil
}

type GetAllGuestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Result     []*Guest    `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllGuestsResponse) Reset() {
	*x = GetAllGuestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestsResponse) ProtoMessage() {}

func (x *GetAllGuestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestsResponse.ProtoReflect.Descriptor instead.
func (*GetAllGuestsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllGuestsResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllGuestsResponse) GetResult() []*Guest {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGuestByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGuestByIDRequest) Reset() {
	*x = GetGuestByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestByIDRequest) ProtoMessage() {}

func (x *GetGuestByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestByIDRequest.ProtoReflect.Descriptor instead.
func (*GetGuestByIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetGuestByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetGuestByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Guest `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetGuestByIDResponse) Reset() {
	*x = GetGuestByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestByIDResponse) ProtoMessage() {}

func (x *GetGuestByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestByIDResponse.ProtoReflect.Descriptor instead.
func (*GetGuestByIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetGuestByIDResponse) GetResult() *Guest {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateGuestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *GuestParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateGuestRequest) Reset() {
	*x = UpdateGuestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGuestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGuestRequest) ProtoMessage() {}

func (x *UpdateGuestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGuestRequest.ProtoReflect.Descriptor instead.
func (*UpdateGuestRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateGuestRequest) GetParams() *GuestParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateGuestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Guest `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateGuestResponse) Reset() {
	*x = UpdateGuestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGuestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGuestResponse) ProtoMessage() {}

func (x *UpdateGuestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGuestResponse.ProtoReflect.Descriptor instead.
func (*UpdateGuestResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateGuestResponse) GetResult() *Guest {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddGuestNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *GuestNoteParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *AddGuestNoteRequest) Reset() {
	*x = AddGuestNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGuestNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGuestNoteRequest) ProtoMessage() {}

func (x *AddGuestNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGuestNoteRequest.ProtoReflect.Descriptor instead.
func (*AddGuestNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{18}
}

func (x *AddGuestNoteRequest) GetParams() *GuestNoteParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type AddGuestNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *GuestNote `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddGuestNoteResponse) Reset() {
	*x = AddGuestNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGuestNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGuestNoteResponse) ProtoMessage() {}

func (x *AddGuestNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGuestNoteResponse.ProtoReflect.Descriptor instead.
func (*AddGuestNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{19}
}

func (x *AddGuestNoteResponse) GetResult() *GuestNote {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllGuestFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId int32 `protobuf:"varint,1,opt,name=guestId,proto3" json:"guestId,omitempty"`
}

func (x *GetAllGuestFeedbackRequest) Reset() {
	*x = GetAllGuestFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestFeedbackRequest) ProtoMessage() {}

func (x *GetAllGuestFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestFeedbackRequest.ProtoReflect.Descriptor instead.
func (*GetAllGuestFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetAllGuestFeedbackRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type GetAllGuestFeedbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ReservationFeedback `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllGuestFeedbackResponse) Reset() {
	*x = GetAllGuestFeedbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestFeedbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestFeedbackResponse) ProtoMessage() {}

func (x *GetAllGuestFeedbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestFeedbackResponse.ProtoReflect.Descriptor instead.
func (*GetAllGuestFeedbackResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetAllGuestFeedbackResponse) GetResult() []*ReservationFeedback {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGuestUpcomingReservationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId int32 `protobuf:"varint,1,opt,name=guestId,proto3" json:"guestId,omitempty"`
}

func (x *GetGuestUpcomingReservationsRequest) Reset() {
	*x = GetGuestUpcomingReservationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestUpcomingReservationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestUpcomingReservationsRequest) ProtoMessage() {}

func (x *GetGuestUpcomingReservationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestUpcomingReservationsRequest.ProtoReflect.Descriptor instead.
func (*GetGuestUpcomingReservationsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetGuestUpcomingReservationsRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type GetGuestUpcomingReservationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*Reservation `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetGuestUpcomingReservationsResponse) Reset() {
	*x = GetGuestUpcomingReservationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestUpcomingReservationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestUpcomingReservationsResponse) ProtoMessage() {}

func (x *GetGuestUpcomingReservationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestUpcomingReservationsResponse.ProtoReflect.Descriptor instead.
func (*GetGuestUpcomingReservationsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetGuestUpcomingReservationsResponse) GetResult() []*Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreatorProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber string `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Avatar      string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Role        string `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreatorProfile) Reset() {
	*x = CreatorProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatorProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatorProfile) ProtoMessage() {}

func (x *CreatorProfile) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatorProfile.ProtoReflect.Descriptor instead.
func (*CreatorProfile) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{24}
}

func (x *CreatorProfile) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreatorProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreatorProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreatorProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreatorProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreatorProfile) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreatorProfile) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type GetAllGuestReservationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId int32             `protobuf:"varint,1,opt,name=guestId,proto3" json:"guestId,omitempty"`
	Params  *PaginationParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetAllGuestReservationsRequest) Reset() {
	*x = GetAllGuestReservationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestReservationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestReservationsRequest) ProtoMessage() {}

func (x *GetAllGuestReservationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestReservationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllGuestReservationsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetAllGuestReservationsRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *GetAllGuestReservationsRequest) GetParams() *PaginationParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type GetAllGuestReservationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination    `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Result     []*Reservation `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllGuestReservationsResponse) Reset() {
	*x = GetAllGuestReservationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestReservationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestReservationsResponse) ProtoMessage() {}

func (x *GetAllGuestReservationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestReservationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllGuestReservationsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetAllGuestReservationsResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllGuestReservationsResponse) GetResult() []*Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReservationGuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName   string     `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName    string     `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	PhoneNumber string     `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	TotalVisits int32      `protobuf:"varint,5,opt,name=totalVisits,proto3" json:"totalVisits,omitempty"`
	TotalSpent  float32    `protobuf:"fixed32,6,opt,name=totalSpent,proto3" json:"totalSpent,omitempty"`
	TotalNoShow int32      `protobuf:"varint,7,opt,name=totalNoShow,proto3" json:"totalNoShow,omitempty"`
	TotalCancel int32      `protobuf:"varint,8,opt,name=totalCancel,proto3" json:"totalCancel,omitempty"`
	IsPrimary   bool       `protobuf:"varint,9,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"`
	Note        *GuestNote `protobuf:"bytes,10,opt,name=note,proto3" json:"note,omitempty"`
	Gender      string     `protobuf:"bytes,11,opt,name=gender,proto3" json:"gender,omitempty"`
	Tags        []*Tag     `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ReservationGuest) Reset() {
	*x = ReservationGuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationGuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationGuest) ProtoMessage() {}

func (x *ReservationGuest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationGuest.ProtoReflect.Descriptor instead.
func (*ReservationGuest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{27}
}

func (x *ReservationGuest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationGuest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ReservationGuest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ReservationGuest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ReservationGuest) GetTotalVisits() int32 {
	if x != nil {
		return x.TotalVisits
	}
	return 0
}

func (x *ReservationGuest) GetTotalSpent() float32 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

func (x *ReservationGuest) GetTotalNoShow() int32 {
	if x != nil {
		return x.TotalNoShow
	}
	return 0
}

func (x *ReservationGuest) GetTotalCancel() int32 {
	if x != nil {
		return x.TotalCancel
	}
	return 0
}

func (x *ReservationGuest) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *ReservationGuest) GetNote() *GuestNote {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *ReservationGuest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *ReservationGuest) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ReservationBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ReservationBranch) Reset() {
	*x = ReservationBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationBranch) ProtoMessage() {}

func (x *ReservationBranch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationBranch.ProtoReflect.Descriptor instead.
func (*ReservationBranch) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{28}
}

func (x *ReservationBranch) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationBranch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ReservationShift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ReservationShift) Reset() {
	*x = ReservationShift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationShift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationShift) ProtoMessage() {}

func (x *ReservationShift) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationShift.ProtoReflect.Descriptor instead.
func (*ReservationShift) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{29}
}

func (x *ReservationShift) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationShift) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ReservationPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TotalPaid   int32  `protobuf:"varint,2,opt,name=totalPaid,proto3" json:"totalPaid,omitempty"`
	TotalUnPaid int32  `protobuf:"varint,3,opt,name=totalUnPaid,proto3" json:"totalUnPaid,omitempty"`
}

func (x *ReservationPayment) Reset() {
	*x = ReservationPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationPayment) ProtoMessage() {}

func (x *ReservationPayment) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationPayment.ProtoReflect.Descriptor instead.
func (*ReservationPayment) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{30}
}

func (x *ReservationPayment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReservationPayment) GetTotalPaid() int32 {
	if x != nil {
		return x.TotalPaid
	}
	return 0
}

func (x *ReservationPayment) GetTotalUnPaid() int32 {
	if x != nil {
		return x.TotalUnPaid
	}
	return 0
}

// Reservation
type Reservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Guests           []*ReservationGuest         `protobuf:"bytes,2,rep,name=guests,proto3" json:"guests,omitempty"`
	Branch           *ReservationBranch          `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	Shift            *ReservationShift           `protobuf:"bytes,4,opt,name=shift,proto3" json:"shift,omitempty"`
	Tables           []*Table                    `protobuf:"bytes,5,rep,name=tables,proto3" json:"tables,omitempty"`
	GuestsNumber     int32                       `protobuf:"varint,6,opt,name=guestsNumber,proto3" json:"guestsNumber,omitempty"`
	SeatedGuests     int32                       `protobuf:"varint,7,opt,name=seatedGuests,proto3" json:"seatedGuests,omitempty"`
	Date             *timestamppb.Timestamp      `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
	Time             *timestamppb.Timestamp      `protobuf:"bytes,9,opt,name=time,proto3" json:"time,omitempty"`
	ReservedVia      string                      `protobuf:"bytes,10,opt,name=reservedVia,proto3" json:"reservedVia,omitempty"`
	CheckIn          *timestamppb.Timestamp      `protobuf:"bytes,11,opt,name=checkIn,proto3" json:"checkIn,omitempty"`
	Status           *ReservationStatus          `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	SpecialOccasion  *ReservationSpecialOccasion `protobuf:"bytes,13,opt,name=specialOccasion,proto3" json:"specialOccasion,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,14,rep,name=tags,proto3" json:"tags,omitempty"`
	Note             *ReservationNote            `protobuf:"bytes,15,opt,name=note,proto3" json:"note,omitempty"`
	Feedback         *ReservationFeedbackShort   `protobuf:"bytes,17,opt,name=feedback,proto3" json:"feedback,omitempty"`
	CheckOut         *timestamppb.Timestamp      `protobuf:"bytes,18,opt,name=checkOut,proto3" json:"checkOut,omitempty"`
	Creator          *CreatorProfile             `protobuf:"bytes,19,opt,name=creator,proto3" json:"creator,omitempty"`
	TotalSpent       float32                     `protobuf:"fixed32,20,opt,name=totalSpent,proto3" json:"totalSpent,omitempty"`
	CreationDuration float32                     `protobuf:"fixed32,21,opt,name=creationDuration,proto3" json:"creationDuration,omitempty"`
	Payment          *ReservationPayment         `protobuf:"bytes,22,opt,name=payment,proto3" json:"payment,omitempty"`
	ReservationRef   string                      `protobuf:"bytes,23,opt,name=reservationRef,proto3" json:"reservationRef,omitempty"`
	CreatedAt        *timestamppb.Timestamp      `protobuf:"bytes,24,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp      `protobuf:"bytes,25,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Reservation) Reset() {
	*x = Reservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reservation) ProtoMessage() {}

func (x *Reservation) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reservation.ProtoReflect.Descriptor instead.
func (*Reservation) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{31}
}

func (x *Reservation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reservation) GetGuests() []*ReservationGuest {
	if x != nil {
		return x.Guests
	}
	return nil
}

func (x *Reservation) GetBranch() *ReservationBranch {
	if x != nil {
		return x.Branch
	}
	return nil
}

func (x *Reservation) GetShift() *ReservationShift {
	if x != nil {
		return x.Shift
	}
	return nil
}

func (x *Reservation) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *Reservation) GetGuestsNumber() int32 {
	if x != nil {
		return x.GuestsNumber
	}
	return 0
}

func (x *Reservation) GetSeatedGuests() int32 {
	if x != nil {
		return x.SeatedGuests
	}
	return 0
}

func (x *Reservation) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Reservation) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Reservation) GetReservedVia() string {
	if x != nil {
		return x.ReservedVia
	}
	return ""
}

func (x *Reservation) GetCheckIn() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckIn
	}
	return nil
}

func (x *Reservation) GetStatus() *ReservationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Reservation) GetSpecialOccasion() *ReservationSpecialOccasion {
	if x != nil {
		return x.SpecialOccasion
	}
	return nil
}

func (x *Reservation) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Reservation) GetNote() *ReservationNote {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *Reservation) GetFeedback() *ReservationFeedbackShort {
	if x != nil {
		return x.Feedback
	}
	return nil
}

func (x *Reservation) GetCheckOut() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckOut
	}
	return nil
}

func (x *Reservation) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *Reservation) GetTotalSpent() float32 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

func (x *Reservation) GetCreationDuration() float32 {
	if x != nil {
		return x.CreationDuration
	}
	return 0
}

func (x *Reservation) GetPayment() *ReservationPayment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *Reservation) GetReservationRef() string {
	if x != nil {
		return x.ReservationRef
	}
	return ""
}

func (x *Reservation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Reservation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Branch          *Branch                     `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	GuestsNumber    int32                       `protobuf:"varint,3,opt,name=guestsNumber,proto3" json:"guestsNumber,omitempty"`
	SeatedGuests    int32                       `protobuf:"varint,4,opt,name=seatedGuests,proto3" json:"seatedGuests,omitempty"`
	Date            *timestamppb.Timestamp      `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Time            *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	ReservedVia     string                      `protobuf:"bytes,7,opt,name=reservedVia,proto3" json:"reservedVia,omitempty"`
	CheckIn         *timestamppb.Timestamp      `protobuf:"bytes,8,opt,name=checkIn,proto3" json:"checkIn,omitempty"`
	Status          *ReservationStatus          `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	SpecialOccasion *ReservationSpecialOccasion `protobuf:"bytes,10,opt,name=specialOccasion,proto3" json:"specialOccasion,omitempty"`
	Tables          []*Table                    `protobuf:"bytes,11,rep,name=tables,proto3" json:"tables,omitempty"`
	CheckOut        *timestamppb.Timestamp      `protobuf:"bytes,12,opt,name=checkOut,proto3" json:"checkOut,omitempty"`
	CreatedAt       *timestamppb.Timestamp      `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       *timestamppb.Timestamp      `protobuf:"bytes,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationShort) Reset() {
	*x = ReservationShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationShort) ProtoMessage() {}

func (x *ReservationShort) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationShort.ProtoReflect.Descriptor instead.
func (*ReservationShort) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{32}
}

func (x *ReservationShort) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationShort) GetBranch() *Branch {
	if x != nil {
		return x.Branch
	}
	return nil
}

func (x *ReservationShort) GetGuestsNumber() int32 {
	if x != nil {
		return x.GuestsNumber
	}
	return 0
}

func (x *ReservationShort) GetSeatedGuests() int32 {
	if x != nil {
		return x.SeatedGuests
	}
	return 0
}

func (x *ReservationShort) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ReservationShort) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ReservationShort) GetReservedVia() string {
	if x != nil {
		return x.ReservedVia
	}
	return ""
}

func (x *ReservationShort) GetCheckIn() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckIn
	}
	return nil
}

func (x *ReservationShort) GetStatus() *ReservationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ReservationShort) GetSpecialOccasion() *ReservationSpecialOccasion {
	if x != nil {
		return x.SpecialOccasion
	}
	return nil
}

func (x *ReservationShort) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *ReservationShort) GetCheckOut() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckOut
	}
	return nil
}

func (x *ReservationShort) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationShort) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId               int32        `protobuf:"varint,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
	BranchId              int32        `protobuf:"varint,3,opt,name=branchId,proto3" json:"branchId,omitempty"`
	SeatingAreaId         int32        `protobuf:"varint,4,opt,name=seatingAreaId,proto3" json:"seatingAreaId,omitempty"`
	ShiftId               int32        `protobuf:"varint,5,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	StatusId              int32        `protobuf:"varint,6,opt,name=statusId,proto3" json:"statusId,omitempty"`
	GuestsNumber          int32        `protobuf:"varint,7,opt,name=guestsNumber,proto3" json:"guestsNumber,omitempty"`
	SeatedGuests          int32        `protobuf:"varint,8,opt,name=seatedGuests,proto3" json:"seatedGuests,omitempty"`
	Date                  string       `protobuf:"bytes,9,opt,name=date,proto3" json:"date,omitempty"`
	Time                  string       `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	CreationDuration      float32      `protobuf:"fixed32,11,opt,name=creationDuration,proto3" json:"creationDuration,omitempty"`
	ReservedVia           string       `protobuf:"bytes,12,opt,name=reservedVia,proto3" json:"reservedVia,omitempty"`
	SpecialOccasionId     int32        `protobuf:"varint,13,opt,name=specialOccasionId,proto3" json:"specialOccasionId,omitempty"`
	Tags                  []*TagParams `protobuf:"bytes,14,rep,name=tags,proto3" json:"tags,omitempty"`
	DeleteSpecialOccasion bool         `protobuf:"varint,15,opt,name=deleteSpecialOccasion,proto3" json:"deleteSpecialOccasion,omitempty"`
	EmptyTags             bool         `protobuf:"varint,16,opt,name=emptyTags,proto3" json:"emptyTags,omitempty"`
	PinCode               string       `protobuf:"bytes,17,opt,name=pinCode,proto3" json:"pinCode,omitempty"`
}

func (x *ReservationParams) Reset() {
	*x = ReservationParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationParams) ProtoMessage() {}

func (x *ReservationParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationParams.ProtoReflect.Descriptor instead.
func (*ReservationParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{33}
}

func (x *ReservationParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationParams) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *ReservationParams) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *ReservationParams) GetSeatingAreaId() int32 {
	if x != nil {
		return x.SeatingAreaId
	}
	return 0
}

func (x *ReservationParams) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *ReservationParams) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *ReservationParams) GetGuestsNumber() int32 {
	if x != nil {
		return x.GuestsNumber
	}
	return 0
}

func (x *ReservationParams) GetSeatedGuests() int32 {
	if x != nil {
		return x.SeatedGuests
	}
	return 0
}

func (x *ReservationParams) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ReservationParams) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ReservationParams) GetCreationDuration() float32 {
	if x != nil {
		return x.CreationDuration
	}
	return 0
}

func (x *ReservationParams) GetReservedVia() string {
	if x != nil {
		return x.ReservedVia
	}
	return ""
}

func (x *ReservationParams) GetSpecialOccasionId() int32 {
	if x != nil {
		return x.SpecialOccasionId
	}
	return 0
}

func (x *ReservationParams) GetTags() []*TagParams {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ReservationParams) GetDeleteSpecialOccasion() bool {
	if x != nil {
		return x.DeleteSpecialOccasion
	}
	return false
}

func (x *ReservationParams) GetEmptyTags() bool {
	if x != nil {
		return x.EmptyTags
	}
	return false
}

func (x *ReservationParams) GetPinCode() string {
	if x != nil {
		return x.PinCode
	}
	return ""
}

type ReservationOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Items          []*ReservationOrderItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	DiscountAmount float32                 `protobuf:"fixed32,3,opt,name=discountAmount,proto3" json:"discountAmount,omitempty"`
	DiscountReason string                  `protobuf:"bytes,4,opt,name=discountReason,proto3" json:"discountReason,omitempty"`
	PrevailingTax  float32                 `protobuf:"fixed32,5,opt,name=prevailingTax,proto3" json:"prevailingTax,omitempty"`
	Tax            float32                 `protobuf:"fixed32,6,opt,name=tax,proto3" json:"tax,omitempty"`
	SubTotal       float32                 `protobuf:"fixed32,7,opt,name=subTotal,proto3" json:"subTotal,omitempty"`
	FinalTotal     float32                 `protobuf:"fixed32,8,opt,name=finalTotal,proto3" json:"finalTotal,omitempty"`
	CreatedAt      *timestamppb.Timestamp  `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationOrder) Reset() {
	*x = ReservationOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationOrder) ProtoMessage() {}

func (x *ReservationOrder) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationOrder.ProtoReflect.Descriptor instead.
func (*ReservationOrder) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{34}
}

func (x *ReservationOrder) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationOrder) GetItems() []*ReservationOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ReservationOrder) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *ReservationOrder) GetDiscountReason() string {
	if x != nil {
		return x.DiscountReason
	}
	return ""
}

func (x *ReservationOrder) GetPrevailingTax() float32 {
	if x != nil {
		return x.PrevailingTax
	}
	return 0
}

func (x *ReservationOrder) GetTax() float32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *ReservationOrder) GetSubTotal() float32 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *ReservationOrder) GetFinalTotal() float32 {
	if x != nil {
		return x.FinalTotal
	}
	return 0
}

func (x *ReservationOrder) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationOrder) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemName  string                 `protobuf:"bytes,2,opt,name=itemName,proto3" json:"itemName,omitempty"`
	Cost      float32                `protobuf:"fixed32,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Quantity  int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationOrderItem) Reset() {
	*x = ReservationOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationOrderItem) ProtoMessage() {}

func (x *ReservationOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationOrderItem.ProtoReflect.Descriptor instead.
func (*ReservationOrderItem) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{35}
}

func (x *ReservationOrderItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationOrderItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *ReservationOrderItem) GetCost() float32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ReservationOrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ReservationOrderItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationOrderItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CreateReservationRequest) Reset() {
	*x = CreateReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationRequest) ProtoMessage() {}

func (x *CreateReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationRequest.ProtoReflect.Descriptor instead.
func (*CreateReservationRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{36}
}

func (x *CreateReservationRequest) GetParams() *ReservationParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Reservation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateReservationResponse) Reset() {
	*x = CreateReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationResponse) ProtoMessage() {}

func (x *CreateReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationResponse.ProtoReflect.Descriptor instead.
func (*CreateReservationResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{37}
}

func (x *CreateReservationResponse) GetResult() *Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllReservationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query            string            `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	StatusIds        []int32           `protobuf:"varint,2,rep,packed,name=statusIds,proto3" json:"statusIds,omitempty"`
	TableIds         []int32           `protobuf:"varint,3,rep,packed,name=tableIds,proto3" json:"tableIds,omitempty"`
	ShiftId          int32             `protobuf:"varint,4,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	BranchId         int32             `protobuf:"varint,5,opt,name=branchId,proto3" json:"branchId,omitempty"`
	Date             string            `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	PaginationParams *PaginationParams `protobuf:"bytes,7,opt,name=paginationParams,proto3" json:"paginationParams,omitempty"`
}

func (x *GetAllReservationsRequest) Reset() {
	*x = GetAllReservationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationsRequest) ProtoMessage() {}

func (x *GetAllReservationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllReservationsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetAllReservationsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetAllReservationsRequest) GetStatusIds() []int32 {
	if x != nil {
		return x.StatusIds
	}
	return nil
}

func (x *GetAllReservationsRequest) GetTableIds() []int32 {
	if x != nil {
		return x.TableIds
	}
	return nil
}

func (x *GetAllReservationsRequest) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *GetAllReservationsRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *GetAllReservationsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetAllReservationsRequest) GetPaginationParams() *PaginationParams {
	if x != nil {
		return x.PaginationParams
	}
	return nil
}

type GetAllReservationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination    `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Result     []*Reservation `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllReservationsResponse) Reset() {
	*x = GetAllReservationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationsResponse) ProtoMessage() {}

func (x *GetAllReservationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllReservationsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetAllReservationsResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllReservationsResponse) GetResult() []*Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetReservationByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetReservationByIDRequest) Reset() {
	*x = GetReservationByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationByIDRequest) ProtoMessage() {}

func (x *GetReservationByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationByIDRequest.ProtoReflect.Descriptor instead.
func (*GetReservationByIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{40}
}

func (x *GetReservationByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetReservationByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Reservation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetReservationByIDResponse) Reset() {
	*x = GetReservationByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationByIDResponse) ProtoMessage() {}

func (x *GetReservationByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationByIDResponse.ProtoReflect.Descriptor instead.
func (*GetReservationByIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{41}
}

func (x *GetReservationByIDResponse) GetResult() *Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateReservationRequest) Reset() {
	*x = UpdateReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationRequest) ProtoMessage() {}

func (x *UpdateReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationRequest.ProtoReflect.Descriptor instead.
func (*UpdateReservationRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateReservationRequest) GetParams() *ReservationParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Reservation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateReservationResponse) Reset() {
	*x = UpdateReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationResponse) ProtoMessage() {}

func (x *UpdateReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationResponse.ProtoReflect.Descriptor instead.
func (*UpdateReservationResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateReservationResponse) GetResult() *Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReservationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category  string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Type      string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Color     string                 `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	Icon      string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationStatus) Reset() {
	*x = ReservationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationStatus) ProtoMessage() {}

func (x *ReservationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationStatus.ProtoReflect.Descriptor instead.
func (*ReservationStatus) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{44}
}

func (x *ReservationStatus) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReservationStatus) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ReservationStatus) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReservationStatus) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *ReservationStatus) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ReservationStatus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationStatus) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TableNumber  string                 `protobuf:"bytes,2,opt,name=tableNumber,proto3" json:"tableNumber,omitempty"`
	PosNumber    int32                  `protobuf:"varint,3,opt,name=posNumber,proto3" json:"posNumber,omitempty"`
	MinPartySize int32                  `protobuf:"varint,4,opt,name=minPartySize,proto3" json:"minPartySize,omitempty"`
	MaxPartySize int32                  `protobuf:"varint,5,opt,name=maxPartySize,proto3" json:"maxPartySize,omitempty"`
	SeatingArea  *SeatingArea           `protobuf:"bytes,6,opt,name=seatingArea,proto3" json:"seatingArea,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{45}
}

func (x *Table) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Table) GetTableNumber() string {
	if x != nil {
		return x.TableNumber
	}
	return ""
}

func (x *Table) GetPosNumber() int32 {
	if x != nil {
		return x.PosNumber
	}
	return 0
}

func (x *Table) GetMinPartySize() int32 {
	if x != nil {
		return x.MinPartySize
	}
	return 0
}

func (x *Table) GetMaxPartySize() int32 {
	if x != nil {
		return x.MaxPartySize
	}
	return 0
}

func (x *Table) GetSeatingArea() *SeatingArea {
	if x != nil {
		return x.SeatingArea
	}
	return nil
}

func (x *Table) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Table) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SeatingArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BranchId int32  `protobuf:"varint,3,opt,name=branchId,proto3" json:"branchId,omitempty"`
}

func (x *SeatingArea) Reset() {
	*x = SeatingArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatingArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatingArea) ProtoMessage() {}

func (x *SeatingArea) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatingArea.ProtoReflect.Descriptor instead.
func (*SeatingArea) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{46}
}

func (x *SeatingArea) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeatingArea) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeatingArea) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

type Shift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	From         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=endDate,proto3" json:"endDate,omitempty"`
	TimeInterval int32                  `protobuf:"varint,8,opt,name=timeInterval,proto3" json:"timeInterval,omitempty"`
	FloorPlan    *FloorPlan             `protobuf:"bytes,9,opt,name=floorPlan,proto3" json:"floorPlan,omitempty"`
	SeatingAreas []*SeatingArea         `protobuf:"bytes,10,rep,name=seatingAreas,proto3" json:"seatingAreas,omitempty"`
	CategoryId   int32                  `protobuf:"varint,11,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	MinGuests    int32                  `protobuf:"varint,12,opt,name=minGuests,proto3" json:"minGuests,omitempty"`
	MaxGuests    int32                  `protobuf:"varint,13,opt,name=maxGuests,proto3" json:"maxGuests,omitempty"`
	DaysToRepeat []string               `protobuf:"bytes,14,rep,name=daysToRepeat,proto3" json:"daysToRepeat,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Shift) Reset() {
	*x = Shift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shift) ProtoMessage() {}

func (x *Shift) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shift.ProtoReflect.Descriptor instead.
func (*Shift) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{47}
}

func (x *Shift) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Shift) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Shift) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Shift) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Shift) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Shift) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Shift) GetTimeInterval() int32 {
	if x != nil {
		return x.TimeInterval
	}
	return 0
}

func (x *Shift) GetFloorPlan() *FloorPlan {
	if x != nil {
		return x.FloorPlan
	}
	return nil
}

func (x *Shift) GetSeatingAreas() []*SeatingArea {
	if x != nil {
		return x.SeatingAreas
	}
	return nil
}

func (x *Shift) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Shift) GetMinGuests() int32 {
	if x != nil {
		return x.MinGuests
	}
	return 0
}

func (x *Shift) GetMaxGuests() int32 {
	if x != nil {
		return x.MaxGuests
	}
	return 0
}

func (x *Shift) GetDaysToRepeat() []string {
	if x != nil {
		return x.DaysToRepeat
	}
	return nil
}

func (x *Shift) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Shift) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FloorPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FloorPlan) Reset() {
	*x = FloorPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloorPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloorPlan) ProtoMessage() {}

func (x *FloorPlan) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloorPlan.ProtoReflect.Descriptor instead.
func (*FloorPlan) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{48}
}

func (x *FloorPlan) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FloorPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FloorPlan) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FloorPlan) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Cast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Staff     []*Staff               `protobuf:"bytes,2,rep,name=staff,proto3" json:"staff,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Cast) Reset() {
	*x = Cast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cast) ProtoMessage() {}

func (x *Cast) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cast.ProtoReflect.Descriptor instead.
func (*Cast) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{49}
}

func (x *Cast) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Cast) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *Cast) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Cast) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Staff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CastId      int32                  `protobuf:"varint,2,opt,name=cast_id,json=castId,proto3" json:"cast_id,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Role        string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	PhoneNumber string                 `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Staff) Reset() {
	*x = Staff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staff) ProtoMessage() {}

func (x *Staff) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staff.ProtoReflect.Descriptor instead.
func (*Staff) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{50}
}

func (x *Staff) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Staff) GetCastId() int32 {
	if x != nil {
		return x.CastId
	}
	return 0
}

func (x *Staff) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Staff) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Staff) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Staff) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Staff) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Branch) Reset() {
	*x = Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{51}
}

func (x *Branch) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Branch) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type FeedbackSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FeedbackSection) Reset() {
	*x = FeedbackSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedbackSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackSection) ProtoMessage() {}

func (x *FeedbackSection) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackSection.ProtoReflect.Descriptor instead.
func (*FeedbackSection) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{52}
}

func (x *FeedbackSection) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeedbackSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeedbackSection) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FeedbackSection) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationFeedbackShort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Rate        int32                  `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *ReservationFeedbackShort) Reset() {
	*x = ReservationFeedbackShort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationFeedbackShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationFeedbackShort) ProtoMessage() {}

func (x *ReservationFeedbackShort) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationFeedbackShort.ProtoReflect.Descriptor instead.
func (*ReservationFeedbackShort) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{53}
}

func (x *ReservationFeedbackShort) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationFeedbackShort) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ReservationFeedbackShort) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReservationFeedbackShort) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ReservationFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Guest       *GuestShort                  `protobuf:"bytes,2,opt,name=guest,proto3" json:"guest,omitempty"`
	Reservation *ReservationShort            `protobuf:"bytes,3,opt,name=reservation,proto3" json:"reservation,omitempty"`
	Status      string                       `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Solution    *ReservationFeedbackSolution `protobuf:"bytes,5,opt,name=solution,proto3" json:"solution,omitempty"`
	Sections    []*FeedbackSection           `protobuf:"bytes,6,rep,name=sections,proto3" json:"sections,omitempty"`
	Rate        int32                        `protobuf:"varint,7,opt,name=rate,proto3" json:"rate,omitempty"`
	Description string                       `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp       `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp       `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationFeedback) Reset() {
	*x = ReservationFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationFeedback) ProtoMessage() {}

func (x *ReservationFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationFeedback.ProtoReflect.Descriptor instead.
func (*ReservationFeedback) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{54}
}

func (x *ReservationFeedback) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationFeedback) GetGuest() *GuestShort {
	if x != nil {
		return x.Guest
	}
	return nil
}

func (x *ReservationFeedback) GetReservation() *ReservationShort {
	if x != nil {
		return x.Reservation
	}
	return nil
}

func (x *ReservationFeedback) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReservationFeedback) GetSolution() *ReservationFeedbackSolution {
	if x != nil {
		return x.Solution
	}
	return nil
}

func (x *ReservationFeedback) GetSections() []*FeedbackSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *ReservationFeedback) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ReservationFeedback) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReservationFeedback) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationFeedback) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationFeedbackParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationId int32   `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	Status        int32   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	SectionIds    []int32 `protobuf:"varint,4,rep,packed,name=sectionIds,proto3" json:"sectionIds,omitempty"`
	Rate          int32   `protobuf:"varint,5,opt,name=rate,proto3" json:"rate,omitempty"`
	Description   string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	EmptySections bool    `protobuf:"varint,7,opt,name=emptySections,proto3" json:"emptySections,omitempty"`
}

func (x *ReservationFeedbackParams) Reset() {
	*x = ReservationFeedbackParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationFeedbackParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationFeedbackParams) ProtoMessage() {}

func (x *ReservationFeedbackParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationFeedbackParams.ProtoReflect.Descriptor instead.
func (*ReservationFeedbackParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{55}
}

func (x *ReservationFeedbackParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationFeedbackParams) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *ReservationFeedbackParams) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReservationFeedbackParams) GetSectionIds() []int32 {
	if x != nil {
		return x.SectionIds
	}
	return nil
}

func (x *ReservationFeedbackParams) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ReservationFeedbackParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReservationFeedbackParams) GetEmptySections() bool {
	if x != nil {
		return x.EmptySections
	}
	return false
}

type ReservationSpecialOccasion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color     string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Icon      string                 `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationSpecialOccasion) Reset() {
	*x = ReservationSpecialOccasion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationSpecialOccasion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationSpecialOccasion) ProtoMessage() {}

func (x *ReservationSpecialOccasion) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationSpecialOccasion.ProtoReflect.Descriptor instead.
func (*ReservationSpecialOccasion) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{56}
}

func (x *ReservationSpecialOccasion) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationSpecialOccasion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReservationSpecialOccasion) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *ReservationSpecialOccasion) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ReservationSpecialOccasion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationSpecialOccasion) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetAvailableTimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId      int32  `protobuf:"varint,1,opt,name=branchId,proto3" json:"branchId,omitempty"`
	ShiftId       int32  `protobuf:"varint,2,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	Date          string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	PartySize     int32  `protobuf:"varint,4,opt,name=partySize,proto3" json:"partySize,omitempty"`
	SeatingAreaId int32  `protobuf:"varint,5,opt,name=seatingAreaId,proto3" json:"seatingAreaId,omitempty"`
}

func (x *GetAvailableTimesRequest) Reset() {
	*x = GetAvailableTimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTimesRequest) ProtoMessage() {}

func (x *GetAvailableTimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTimesRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableTimesRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{57}
}

func (x *GetAvailableTimesRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *GetAvailableTimesRequest) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *GetAvailableTimesRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetAvailableTimesRequest) GetPartySize() int32 {
	if x != nil {
		return x.PartySize
	}
	return 0
}

func (x *GetAvailableTimesRequest) GetSeatingAreaId() int32 {
	if x != nil {
		return x.SeatingAreaId
	}
	return 0
}

type GetAvailableTimesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableTimes []*AvailableTime `protobuf:"bytes,1,rep,name=availableTimes,proto3" json:"availableTimes,omitempty"`
}

func (x *GetAvailableTimesResponse) Reset() {
	*x = GetAvailableTimesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTimesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTimesResponse) ProtoMessage() {}

func (x *GetAvailableTimesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTimesResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableTimesResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{58}
}

func (x *GetAvailableTimesResponse) GetAvailableTimes() []*AvailableTime {
	if x != nil {
		return x.AvailableTimes
	}
	return nil
}

type GetWidgetAvailableTimesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId      int32  `protobuf:"varint,1,opt,name=branchId,proto3" json:"branchId,omitempty"`
	FromDate      string `protobuf:"bytes,2,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate        string `protobuf:"bytes,3,opt,name=toDate,proto3" json:"toDate,omitempty"`
	PartySize     int32  `protobuf:"varint,4,opt,name=partySize,proto3" json:"partySize,omitempty"`
	SeatingAreaId int32  `protobuf:"varint,5,opt,name=seatingAreaId,proto3" json:"seatingAreaId,omitempty"`
}

func (x *GetWidgetAvailableTimesRequest) Reset() {
	*x = GetWidgetAvailableTimesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWidgetAvailableTimesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWidgetAvailableTimesRequest) ProtoMessage() {}

func (x *GetWidgetAvailableTimesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWidgetAvailableTimesRequest.ProtoReflect.Descriptor instead.
func (*GetWidgetAvailableTimesRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{59}
}

func (x *GetWidgetAvailableTimesRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *GetWidgetAvailableTimesRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetWidgetAvailableTimesRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

func (x *GetWidgetAvailableTimesRequest) GetPartySize() int32 {
	if x != nil {
		return x.PartySize
	}
	return 0
}

func (x *GetWidgetAvailableTimesRequest) GetSeatingAreaId() int32 {
	if x != nil {
		return x.SeatingAreaId
	}
	return 0
}

type GetWidgetAvailableTimesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableTimes []*AvailableTime `protobuf:"bytes,1,rep,name=availableTimes,proto3" json:"availableTimes,omitempty"`
	Date           string           `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetWidgetAvailableTimesResponse) Reset() {
	*x = GetWidgetAvailableTimesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWidgetAvailableTimesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWidgetAvailableTimesResponse) ProtoMessage() {}

func (x *GetWidgetAvailableTimesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWidgetAvailableTimesResponse.ProtoReflect.Descriptor instead.
func (*GetWidgetAvailableTimesResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{60}
}

func (x *GetWidgetAvailableTimesResponse) GetAvailableTimes() []*AvailableTime {
	if x != nil {
		return x.AvailableTimes
	}
	return nil
}

func (x *GetWidgetAvailableTimesResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type AvailableTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Pacing    int32                  `protobuf:"varint,2,opt,name=pacing,proto3" json:"pacing,omitempty"`
	Capacity  int32                  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Available bool                   `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *AvailableTime) Reset() {
	*x = AvailableTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableTime) ProtoMessage() {}

func (x *AvailableTime) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableTime.ProtoReflect.Descriptor instead.
func (*AvailableTime) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{61}
}

func (x *AvailableTime) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AvailableTime) GetPacing() int32 {
	if x != nil {
		return x.Pacing
	}
	return 0
}

func (x *AvailableTime) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *AvailableTime) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type ReservationNoteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationId int32  `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ReservationNoteParams) Reset() {
	*x = ReservationNoteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationNoteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationNoteParams) ProtoMessage() {}

func (x *ReservationNoteParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationNoteParams.ProtoReflect.Descriptor instead.
func (*ReservationNoteParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{62}
}

func (x *ReservationNoteParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationNoteParams) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *ReservationNoteParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ReservationNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Creator     *CreatorProfile        `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Reservation *Reservation           `protobuf:"bytes,4,opt,name=reservation,proto3" json:"reservation,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationNote) Reset() {
	*x = ReservationNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationNote) ProtoMessage() {}

func (x *ReservationNote) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationNote.ProtoReflect.Descriptor instead.
func (*ReservationNote) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{63}
}

func (x *ReservationNote) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationNote) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReservationNote) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ReservationNote) GetReservation() *Reservation {
	if x != nil {
		return x.Reservation
	}
	return nil
}

func (x *ReservationNote) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationNote) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AddReservationNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationNoteParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *AddReservationNoteRequest) Reset() {
	*x = AddReservationNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReservationNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReservationNoteRequest) ProtoMessage() {}

func (x *AddReservationNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReservationNoteRequest.ProtoReflect.Descriptor instead.
func (*AddReservationNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{64}
}

func (x *AddReservationNoteRequest) GetParams() *ReservationNoteParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type AddReservationNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationNote `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddReservationNoteResponse) Reset() {
	*x = AddReservationNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReservationNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReservationNoteResponse) ProtoMessage() {}

func (x *AddReservationNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReservationNoteResponse.ProtoReflect.Descriptor instead.
func (*AddReservationNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{65}
}

func (x *AddReservationNoteResponse) GetResult() *ReservationNote {
	if x != nil {
		return x.Result
	}
	return nil
}

// Pagination
type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PerPage     int32 `protobuf:"varint,2,opt,name=perPage,proto3" json:"perPage,omitempty"`
	CurrentPage int32 `protobuf:"varint,3,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	LastPage    int32 `protobuf:"varint,4,opt,name=lastPage,proto3" json:"lastPage,omitempty"`
	From        int32 `protobuf:"varint,5,opt,name=from,proto3" json:"from,omitempty"`
	To          int32 `protobuf:"varint,6,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{66}
}

func (x *Pagination) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Pagination) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *Pagination) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetLastPage() int32 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *Pagination) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Pagination) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

type PaginationParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerPage     int32 `protobuf:"varint,1,opt,name=perPage,proto3" json:"perPage,omitempty"`
	CurrentPage int32 `protobuf:"varint,2,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
}

func (x *PaginationParams) Reset() {
	*x = PaginationParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationParams) ProtoMessage() {}

func (x *PaginationParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationParams.ProtoReflect.Descriptor instead.
func (*PaginationParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{67}
}

func (x *PaginationParams) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *PaginationParams) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

// Logs
type ReservationLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationId int32                  `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	Creator       *CreatorProfile        `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	MadeBy        string                 `protobuf:"bytes,4,opt,name=madeBy,proto3" json:"madeBy,omitempty"`
	FieldName     string                 `protobuf:"bytes,5,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	OldValue      string                 `protobuf:"bytes,6,opt,name=oldValue,proto3" json:"oldValue,omitempty"`
	NewValue      string                 `protobuf:"bytes,7,opt,name=newValue,proto3" json:"newValue,omitempty"`
	Action        string                 `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationLog) Reset() {
	*x = ReservationLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationLog) ProtoMessage() {}

func (x *ReservationLog) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationLog.ProtoReflect.Descriptor instead.
func (*ReservationLog) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{68}
}

func (x *ReservationLog) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationLog) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *ReservationLog) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ReservationLog) GetMadeBy() string {
	if x != nil {
		return x.MadeBy
	}
	return ""
}

func (x *ReservationLog) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *ReservationLog) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *ReservationLog) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *ReservationLog) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ReservationLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationLog) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationLogParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationId int32  `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	FieldName     string `protobuf:"bytes,3,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	OldValue      string `protobuf:"bytes,4,opt,name=oldValue,proto3" json:"oldValue,omitempty"`
	NewValue      string `protobuf:"bytes,5,opt,name=newValue,proto3" json:"newValue,omitempty"`
	Action        string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ReservationLogParams) Reset() {
	*x = ReservationLogParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationLogParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationLogParams) ProtoMessage() {}

func (x *ReservationLogParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationLogParams.ProtoReflect.Descriptor instead.
func (*ReservationLogParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{69}
}

func (x *ReservationLogParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationLogParams) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *ReservationLogParams) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *ReservationLogParams) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *ReservationLogParams) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *ReservationLogParams) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type GuestLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId   int32                  `protobuf:"varint,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
	Creator   *CreatorProfile        `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	MadeBy    string                 `protobuf:"bytes,4,opt,name=madeBy,proto3" json:"madeBy,omitempty"`
	FieldName string                 `protobuf:"bytes,5,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	OldValue  string                 `protobuf:"bytes,6,opt,name=oldValue,proto3" json:"oldValue,omitempty"`
	NewValue  string                 `protobuf:"bytes,7,opt,name=newValue,proto3" json:"newValue,omitempty"`
	Action    string                 `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GuestLog) Reset() {
	*x = GuestLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestLog) ProtoMessage() {}

func (x *GuestLog) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestLog.ProtoReflect.Descriptor instead.
func (*GuestLog) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{70}
}

func (x *GuestLog) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GuestLog) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *GuestLog) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *GuestLog) GetMadeBy() string {
	if x != nil {
		return x.MadeBy
	}
	return ""
}

func (x *GuestLog) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *GuestLog) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *GuestLog) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *GuestLog) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GuestLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GuestLog) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GuestLogParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId   int32  `protobuf:"varint,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
	FieldName string `protobuf:"bytes,3,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	OldValue  string `protobuf:"bytes,4,opt,name=oldValue,proto3" json:"oldValue,omitempty"`
	NewValue  string `protobuf:"bytes,5,opt,name=newValue,proto3" json:"newValue,omitempty"`
	Action    string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GuestLogParams) Reset() {
	*x = GuestLogParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestLogParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestLogParams) ProtoMessage() {}

func (x *GuestLogParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestLogParams.ProtoReflect.Descriptor instead.
func (*GuestLogParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{71}
}

func (x *GuestLogParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GuestLogParams) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *GuestLogParams) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *GuestLogParams) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *GuestLogParams) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *GuestLogParams) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type GetAllReservationLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId int32 `protobuf:"varint,1,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *GetAllReservationLogsRequest) Reset() {
	*x = GetAllReservationLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationLogsRequest) ProtoMessage() {}

func (x *GetAllReservationLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationLogsRequest.ProtoReflect.Descriptor instead.
func (*GetAllReservationLogsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{72}
}

func (x *GetAllReservationLogsRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type GetAllReservationLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ReservationLog `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllReservationLogsResponse) Reset() {
	*x = GetAllReservationLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationLogsResponse) ProtoMessage() {}

func (x *GetAllReservationLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationLogsResponse.ProtoReflect.Descriptor instead.
func (*GetAllReservationLogsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{73}
}

func (x *GetAllReservationLogsResponse) GetResult() []*ReservationLog {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllGuestLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId int32 `protobuf:"varint,1,opt,name=guestId,proto3" json:"guestId,omitempty"`
}

func (x *GetAllGuestLogsRequest) Reset() {
	*x = GetAllGuestLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestLogsRequest) ProtoMessage() {}

func (x *GetAllGuestLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestLogsRequest.ProtoReflect.Descriptor instead.
func (*GetAllGuestLogsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{74}
}

func (x *GetAllGuestLogsRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type GetAllGuestLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GuestLog `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllGuestLogsResponse) Reset() {
	*x = GetAllGuestLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGuestLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGuestLogsResponse) ProtoMessage() {}

func (x *GetAllGuestLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGuestLogsResponse.ProtoReflect.Descriptor instead.
func (*GetAllGuestLogsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{75}
}

func (x *GetAllGuestLogsResponse) GetResult() []*GuestLog {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetRealtimeReservationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShiftId int32  `protobuf:"varint,1,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	Date    string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetRealtimeReservationsRequest) Reset() {
	*x = GetRealtimeReservationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRealtimeReservationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealtimeReservationsRequest) ProtoMessage() {}

func (x *GetRealtimeReservationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealtimeReservationsRequest.ProtoReflect.Descriptor instead.
func (*GetRealtimeReservationsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{76}
}

func (x *GetRealtimeReservationsRequest) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *GetRealtimeReservationsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type UpdateReservationTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId int32   `protobuf:"varint,1,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	Tables        []int32 `protobuf:"varint,2,rep,packed,name=tables,proto3" json:"tables,omitempty"`
}

func (x *UpdateReservationTableRequest) Reset() {
	*x = UpdateReservationTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationTableRequest) ProtoMessage() {}

func (x *UpdateReservationTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateReservationTableRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{77}
}

func (x *UpdateReservationTableRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *UpdateReservationTableRequest) GetTables() []int32 {
	if x != nil {
		return x.Tables
	}
	return nil
}

type UpdateReservationTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Reservation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateReservationTableResponse) Reset() {
	*x = UpdateReservationTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationTableResponse) ProtoMessage() {}

func (x *UpdateReservationTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationTableResponse.ProtoReflect.Descriptor instead.
func (*UpdateReservationTableResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{78}
}

func (x *UpdateReservationTableResponse) GetResult() *Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReservationWaitlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Guest        *Guest                   `protobuf:"bytes,2,opt,name=guest,proto3" json:"guest,omitempty"`
	Shift        *Shift                   `protobuf:"bytes,3,opt,name=shift,proto3" json:"shift,omitempty"`
	SeatingArea  *SeatingArea             `protobuf:"bytes,4,opt,name=seatingArea,proto3" json:"seatingArea,omitempty"`
	GuestsNumber int32                    `protobuf:"varint,5,opt,name=guestsNumber,proto3" json:"guestsNumber,omitempty"`
	WaitingTime  int32                    `protobuf:"varint,6,opt,name=waitingTime,proto3" json:"waitingTime,omitempty"`
	Note         *ReservationWaitlistNote `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`
	Tags         []*Tag                   `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Date         string                   `protobuf:"bytes,9,opt,name=date,proto3" json:"date,omitempty"`
	BranchId     int32                    `protobuf:"varint,10,opt,name=branchId,proto3" json:"branchId,omitempty"`
	CreatedAt    *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationWaitlist) Reset() {
	*x = ReservationWaitlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationWaitlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationWaitlist) ProtoMessage() {}

func (x *ReservationWaitlist) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationWaitlist.ProtoReflect.Descriptor instead.
func (*ReservationWaitlist) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{79}
}

func (x *ReservationWaitlist) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationWaitlist) GetGuest() *Guest {
	if x != nil {
		return x.Guest
	}
	return nil
}

func (x *ReservationWaitlist) GetShift() *Shift {
	if x != nil {
		return x.Shift
	}
	return nil
}

func (x *ReservationWaitlist) GetSeatingArea() *SeatingArea {
	if x != nil {
		return x.SeatingArea
	}
	return nil
}

func (x *ReservationWaitlist) GetGuestsNumber() int32 {
	if x != nil {
		return x.GuestsNumber
	}
	return 0
}

func (x *ReservationWaitlist) GetWaitingTime() int32 {
	if x != nil {
		return x.WaitingTime
	}
	return 0
}

func (x *ReservationWaitlist) GetNote() *ReservationWaitlistNote {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *ReservationWaitlist) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ReservationWaitlist) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ReservationWaitlist) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *ReservationWaitlist) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationWaitlist) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationWaitlistParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId       int32        `protobuf:"varint,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
	ShiftId       int32        `protobuf:"varint,3,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	SeatingAreaId int32        `protobuf:"varint,4,opt,name=seatingAreaId,proto3" json:"seatingAreaId,omitempty"`
	GuestsNumber  int32        `protobuf:"varint,5,opt,name=guestsNumber,proto3" json:"guestsNumber,omitempty"`
	WaitingTime   int32        `protobuf:"varint,6,opt,name=waitingTime,proto3" json:"waitingTime,omitempty"`
	Tags          []*TagParams `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	NoteId        int32        `protobuf:"varint,8,opt,name=noteId,proto3" json:"noteId,omitempty"`
	DeleteTags    bool         `protobuf:"varint,9,opt,name=deleteTags,proto3" json:"deleteTags,omitempty"`
	Type          string       `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Date          string       `protobuf:"bytes,11,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ReservationWaitlistParams) Reset() {
	*x = ReservationWaitlistParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationWaitlistParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationWaitlistParams) ProtoMessage() {}

func (x *ReservationWaitlistParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationWaitlistParams.ProtoReflect.Descriptor instead.
func (*ReservationWaitlistParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{80}
}

func (x *ReservationWaitlistParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationWaitlistParams) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *ReservationWaitlistParams) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *ReservationWaitlistParams) GetSeatingAreaId() int32 {
	if x != nil {
		return x.SeatingAreaId
	}
	return 0
}

func (x *ReservationWaitlistParams) GetGuestsNumber() int32 {
	if x != nil {
		return x.GuestsNumber
	}
	return 0
}

func (x *ReservationWaitlistParams) GetWaitingTime() int32 {
	if x != nil {
		return x.WaitingTime
	}
	return 0
}

func (x *ReservationWaitlistParams) GetTags() []*TagParams {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ReservationWaitlistParams) GetNoteId() int32 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *ReservationWaitlistParams) GetDeleteTags() bool {
	if x != nil {
		return x.DeleteTags
	}
	return false
}

func (x *ReservationWaitlistParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReservationWaitlistParams) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type CreateWaitingReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationWaitlistParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CreateWaitingReservationRequest) Reset() {
	*x = CreateWaitingReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWaitingReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingReservationRequest) ProtoMessage() {}

func (x *CreateWaitingReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingReservationRequest.ProtoReflect.Descriptor instead.
func (*CreateWaitingReservationRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{81}
}

func (x *CreateWaitingReservationRequest) GetParams() *ReservationWaitlistParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateWaitingReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationWaitlist `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateWaitingReservationResponse) Reset() {
	*x = CreateWaitingReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWaitingReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingReservationResponse) ProtoMessage() {}

func (x *CreateWaitingReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingReservationResponse.ProtoReflect.Descriptor instead.
func (*CreateWaitingReservationResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{82}
}

func (x *CreateWaitingReservationResponse) GetResult() *ReservationWaitlist {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetWaitingReservationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ReservationWaitlist `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetWaitingReservationsResponse) Reset() {
	*x = GetWaitingReservationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWaitingReservationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaitingReservationsResponse) ProtoMessage() {}

func (x *GetWaitingReservationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaitingReservationsResponse.ProtoReflect.Descriptor instead.
func (*GetWaitingReservationsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{83}
}

func (x *GetWaitingReservationsResponse) GetResult() []*ReservationWaitlist {
	if x != nil {
		return x.Result
	}
	return nil
}

type SeatWaitingReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Tables    []int32 `protobuf:"varint,3,rep,packed,name=tables,proto3" json:"tables,omitempty"`
	Type      string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	CreatorId int32   `protobuf:"varint,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
}

func (x *SeatWaitingReservationRequest) Reset() {
	*x = SeatWaitingReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatWaitingReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatWaitingReservationRequest) ProtoMessage() {}

func (x *SeatWaitingReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatWaitingReservationRequest.ProtoReflect.Descriptor instead.
func (*SeatWaitingReservationRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{84}
}

func (x *SeatWaitingReservationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SeatWaitingReservationRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SeatWaitingReservationRequest) GetTables() []int32 {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *SeatWaitingReservationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SeatWaitingReservationRequest) GetCreatorId() int32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

type GetWaitingReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShiftId int32  `protobuf:"varint,1,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	Date    string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetWaitingReservationRequest) Reset() {
	*x = GetWaitingReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWaitingReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaitingReservationRequest) ProtoMessage() {}

func (x *GetWaitingReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaitingReservationRequest.ProtoReflect.Descriptor instead.
func (*GetWaitingReservationRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{85}
}

func (x *GetWaitingReservationRequest) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *GetWaitingReservationRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetWaitingReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationWaitlist `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetWaitingReservationResponse) Reset() {
	*x = GetWaitingReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWaitingReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaitingReservationResponse) ProtoMessage() {}

func (x *GetWaitingReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaitingReservationResponse.ProtoReflect.Descriptor instead.
func (*GetWaitingReservationResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{86}
}

func (x *GetWaitingReservationResponse) GetResult() *ReservationWaitlist {
	if x != nil {
		return x.Result
	}
	return nil
}

type SeatWaitingReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Reservation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SeatWaitingReservationResponse) Reset() {
	*x = SeatWaitingReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatWaitingReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatWaitingReservationResponse) ProtoMessage() {}

func (x *SeatWaitingReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatWaitingReservationResponse.ProtoReflect.Descriptor instead.
func (*SeatWaitingReservationResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{87}
}

func (x *SeatWaitingReservationResponse) GetResult() *Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReservationStatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReservationStatusCount) Reset() {
	*x = ReservationStatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationStatusCount) ProtoMessage() {}

func (x *ReservationStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationStatusCount.ProtoReflect.Descriptor instead.
func (*ReservationStatusCount) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{88}
}

func (x *ReservationStatusCount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReservationStatusCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GuestStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalReservations  int32   `protobuf:"varint,1,opt,name=totalReservations,proto3" json:"totalReservations,omitempty"`
	TotalSpent         float32 `protobuf:"fixed32,2,opt,name=totalSpent,proto3" json:"totalSpent,omitempty"`
	PublicSatisfaction string  `protobuf:"bytes,3,opt,name=publicSatisfaction,proto3" json:"publicSatisfaction,omitempty"`
}

func (x *GuestStatistics) Reset() {
	*x = GuestStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestStatistics) ProtoMessage() {}

func (x *GuestStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestStatistics.ProtoReflect.Descriptor instead.
func (*GuestStatistics) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{89}
}

func (x *GuestStatistics) GetTotalReservations() int32 {
	if x != nil {
		return x.TotalReservations
	}
	return 0
}

func (x *GuestStatistics) GetTotalSpent() float32 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

func (x *GuestStatistics) GetPublicSatisfaction() string {
	if x != nil {
		return x.PublicSatisfaction
	}
	return ""
}

type GetGuestStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId int32 `protobuf:"varint,1,opt,name=guestId,proto3" json:"guestId,omitempty"`
}

func (x *GetGuestStatisticsRequest) Reset() {
	*x = GetGuestStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestStatisticsRequest) ProtoMessage() {}

func (x *GetGuestStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetGuestStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{90}
}

func (x *GetGuestStatisticsRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type GetGuestStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *GuestStatistics `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetGuestStatisticsResponse) Reset() {
	*x = GetGuestStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestStatisticsResponse) ProtoMessage() {}

func (x *GetGuestStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetGuestStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{91}
}

func (x *GetGuestStatisticsResponse) GetResult() *GuestStatistics {
	if x != nil {
		return x.Result
	}
	return nil
}

type MonthSpending struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month      string  `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	TotalSpent float32 `protobuf:"fixed32,2,opt,name=totalSpent,proto3" json:"totalSpent,omitempty"`
}

func (x *MonthSpending) Reset() {
	*x = MonthSpending{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonthSpending) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthSpending) ProtoMessage() {}

func (x *MonthSpending) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthSpending.ProtoReflect.Descriptor instead.
func (*MonthSpending) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{92}
}

func (x *MonthSpending) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MonthSpending) GetTotalSpent() float32 {
	if x != nil {
		return x.TotalSpent
	}
	return 0
}

type YearSpending struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year   int32            `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Months []*MonthSpending `protobuf:"bytes,2,rep,name=months,proto3" json:"months,omitempty"`
}

func (x *YearSpending) Reset() {
	*x = YearSpending{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YearSpending) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YearSpending) ProtoMessage() {}

func (x *YearSpending) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YearSpending.ProtoReflect.Descriptor instead.
func (*YearSpending) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{93}
}

func (x *YearSpending) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *YearSpending) GetMonths() []*MonthSpending {
	if x != nil {
		return x.Months
	}
	return nil
}

type GetGuestSpendingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId int32 `protobuf:"varint,1,opt,name=guestId,proto3" json:"guestId,omitempty"`
}

func (x *GetGuestSpendingRequest) Reset() {
	*x = GetGuestSpendingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestSpendingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestSpendingRequest) ProtoMessage() {}

func (x *GetGuestSpendingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestSpendingRequest.ProtoReflect.Descriptor instead.
func (*GetGuestSpendingRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{94}
}

func (x *GetGuestSpendingRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type GetGuestSpendingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*YearSpending `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetGuestSpendingResponse) Reset() {
	*x = GetGuestSpendingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestSpendingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestSpendingResponse) ProtoMessage() {}

func (x *GetGuestSpendingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestSpendingResponse.ProtoReflect.Descriptor instead.
func (*GetGuestSpendingResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{95}
}

func (x *GetGuestSpendingResponse) GetResult() []*YearSpending {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGuestReservationStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestId   int32  `protobuf:"varint,1,opt,name=guestId,proto3" json:"guestId,omitempty"`
	FromDate  string `protobuf:"bytes,2,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate    string `protobuf:"bytes,3,opt,name=toDate,proto3" json:"toDate,omitempty"`
	QueryType string `protobuf:"bytes,4,opt,name=queryType,proto3" json:"queryType,omitempty"`
}

func (x *GetGuestReservationStatisticsRequest) Reset() {
	*x = GetGuestReservationStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestReservationStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestReservationStatisticsRequest) ProtoMessage() {}

func (x *GetGuestReservationStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestReservationStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetGuestReservationStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{96}
}

func (x *GetGuestReservationStatisticsRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

func (x *GetGuestReservationStatisticsRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetGuestReservationStatisticsRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

func (x *GetGuestReservationStatisticsRequest) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

type GuestReservationStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GuestReservationStatistics) Reset() {
	*x = GuestReservationStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuestReservationStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuestReservationStatistics) ProtoMessage() {}

func (x *GuestReservationStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuestReservationStatistics.ProtoReflect.Descriptor instead.
func (*GuestReservationStatistics) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{97}
}

func (x *GuestReservationStatistics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuestReservationStatistics) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GetGuestReservationStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*GuestReservationStatistics `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetGuestReservationStatisticsResponse) Reset() {
	*x = GetGuestReservationStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGuestReservationStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGuestReservationStatisticsResponse) ProtoMessage() {}

func (x *GetGuestReservationStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGuestReservationStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetGuestReservationStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{98}
}

func (x *GetGuestReservationStatisticsResponse) GetResult() []*GuestReservationStatistics {
	if x != nil {
		return x.Result
	}
	return nil
}

type SpecialOccasion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color     string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Icon      string                 `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *SpecialOccasion) Reset() {
	*x = SpecialOccasion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecialOccasion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialOccasion) ProtoMessage() {}

func (x *SpecialOccasion) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialOccasion.ProtoReflect.Descriptor instead.
func (*SpecialOccasion) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{99}
}

func (x *SpecialOccasion) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpecialOccasion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpecialOccasion) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SpecialOccasion) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SpecialOccasion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SpecialOccasion) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetAllSpecialOccasionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*SpecialOccasion `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllSpecialOccasionsResponse) Reset() {
	*x = GetAllSpecialOccasionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSpecialOccasionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSpecialOccasionsResponse) ProtoMessage() {}

func (x *GetAllSpecialOccasionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSpecialOccasionsResponse.ProtoReflect.Descriptor instead.
func (*GetAllSpecialOccasionsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{100}
}

func (x *GetAllSpecialOccasionsResponse) GetResult() []*SpecialOccasion {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateReservationFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationFeedbackParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CreateReservationFeedbackRequest) Reset() {
	*x = CreateReservationFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationFeedbackRequest) ProtoMessage() {}

func (x *CreateReservationFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationFeedbackRequest.ProtoReflect.Descriptor instead.
func (*CreateReservationFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{101}
}

func (x *CreateReservationFeedbackRequest) GetParams() *ReservationFeedbackParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateReservationFeedbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationFeedback `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateReservationFeedbackResponse) Reset() {
	*x = CreateReservationFeedbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationFeedbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationFeedbackResponse) ProtoMessage() {}

func (x *CreateReservationFeedbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationFeedbackResponse.ProtoReflect.Descriptor instead.
func (*CreateReservationFeedbackResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{102}
}

func (x *CreateReservationFeedbackResponse) GetResult() *ReservationFeedback {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllReservationsFeedbacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationParams *PaginationParams `protobuf:"bytes,1,opt,name=paginationParams,proto3" json:"paginationParams,omitempty"`
	Query            string            `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	FromDate         string            `protobuf:"bytes,3,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate           string            `protobuf:"bytes,4,opt,name=toDate,proto3" json:"toDate,omitempty"`
	BranchIds        []int32           `protobuf:"varint,5,rep,packed,name=branchIds,proto3" json:"branchIds,omitempty"`
	StatusIds        []int32           `protobuf:"varint,6,rep,packed,name=statusIds,proto3" json:"statusIds,omitempty"`
	Rate             []string          `protobuf:"bytes,7,rep,name=rate,proto3" json:"rate,omitempty"`
}

func (x *GetAllReservationsFeedbacksRequest) Reset() {
	*x = GetAllReservationsFeedbacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationsFeedbacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationsFeedbacksRequest) ProtoMessage() {}

func (x *GetAllReservationsFeedbacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationsFeedbacksRequest.ProtoReflect.Descriptor instead.
func (*GetAllReservationsFeedbacksRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{103}
}

func (x *GetAllReservationsFeedbacksRequest) GetPaginationParams() *PaginationParams {
	if x != nil {
		return x.PaginationParams
	}
	return nil
}

func (x *GetAllReservationsFeedbacksRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetAllReservationsFeedbacksRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetAllReservationsFeedbacksRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

func (x *GetAllReservationsFeedbacksRequest) GetBranchIds() []int32 {
	if x != nil {
		return x.BranchIds
	}
	return nil
}

func (x *GetAllReservationsFeedbacksRequest) GetStatusIds() []int32 {
	if x != nil {
		return x.StatusIds
	}
	return nil
}

func (x *GetAllReservationsFeedbacksRequest) GetRate() []string {
	if x != nil {
		return x.Rate
	}
	return nil
}

type GetAllReservationsFeedbacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination    *Pagination            `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Result        []*ReservationFeedback `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	TotalPositive int32                  `protobuf:"varint,3,opt,name=totalPositive,proto3" json:"totalPositive,omitempty"`
	TotalNegative int32                  `protobuf:"varint,4,opt,name=totalNegative,proto3" json:"totalNegative,omitempty"`
	TotalPending  int32                  `protobuf:"varint,5,opt,name=totalPending,proto3" json:"totalPending,omitempty"`
	TotalSolved   int32                  `protobuf:"varint,6,opt,name=totalSolved,proto3" json:"totalSolved,omitempty"`
}

func (x *GetAllReservationsFeedbacksResponse) Reset() {
	*x = GetAllReservationsFeedbacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationsFeedbacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationsFeedbacksResponse) ProtoMessage() {}

func (x *GetAllReservationsFeedbacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationsFeedbacksResponse.ProtoReflect.Descriptor instead.
func (*GetAllReservationsFeedbacksResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{104}
}

func (x *GetAllReservationsFeedbacksResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllReservationsFeedbacksResponse) GetResult() []*ReservationFeedback {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetAllReservationsFeedbacksResponse) GetTotalPositive() int32 {
	if x != nil {
		return x.TotalPositive
	}
	return 0
}

func (x *GetAllReservationsFeedbacksResponse) GetTotalNegative() int32 {
	if x != nil {
		return x.TotalNegative
	}
	return 0
}

func (x *GetAllReservationsFeedbacksResponse) GetTotalPending() int32 {
	if x != nil {
		return x.TotalPending
	}
	return 0
}

func (x *GetAllReservationsFeedbacksResponse) GetTotalSolved() int32 {
	if x != nil {
		return x.TotalSolved
	}
	return 0
}

type GetReservationFeedbackByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackId    int32 `protobuf:"varint,1,opt,name=feedbackId,proto3" json:"feedbackId,omitempty"`
	ReservationId int32 `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *GetReservationFeedbackByIDRequest) Reset() {
	*x = GetReservationFeedbackByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationFeedbackByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationFeedbackByIDRequest) ProtoMessage() {}

func (x *GetReservationFeedbackByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationFeedbackByIDRequest.ProtoReflect.Descriptor instead.
func (*GetReservationFeedbackByIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{105}
}

func (x *GetReservationFeedbackByIDRequest) GetFeedbackId() int32 {
	if x != nil {
		return x.FeedbackId
	}
	return 0
}

func (x *GetReservationFeedbackByIDRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type GetReservationFeedbackByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationFeedback `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetReservationFeedbackByIDResponse) Reset() {
	*x = GetReservationFeedbackByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationFeedbackByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationFeedbackByIDResponse) ProtoMessage() {}

func (x *GetReservationFeedbackByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationFeedbackByIDResponse.ProtoReflect.Descriptor instead.
func (*GetReservationFeedbackByIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{106}
}

func (x *GetReservationFeedbackByIDResponse) GetResult() *ReservationFeedback {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateReservationFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationFeedbackParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateReservationFeedbackRequest) Reset() {
	*x = UpdateReservationFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationFeedbackRequest) ProtoMessage() {}

func (x *UpdateReservationFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationFeedbackRequest.ProtoReflect.Descriptor instead.
func (*UpdateReservationFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{107}
}

func (x *UpdateReservationFeedbackRequest) GetParams() *ReservationFeedbackParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateReservationFeedbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationFeedback `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateReservationFeedbackResponse) Reset() {
	*x = UpdateReservationFeedbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationFeedbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationFeedbackResponse) ProtoMessage() {}

func (x *UpdateReservationFeedbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationFeedbackResponse.ProtoReflect.Descriptor instead.
func (*UpdateReservationFeedbackResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{108}
}

func (x *UpdateReservationFeedbackResponse) GetResult() *ReservationFeedback {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllReservationsFeedbackSectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*FeedbackSection `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllReservationsFeedbackSectionsResponse) Reset() {
	*x = GetAllReservationsFeedbackSectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationsFeedbackSectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationsFeedbackSectionsResponse) ProtoMessage() {}

func (x *GetAllReservationsFeedbackSectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationsFeedbackSectionsResponse.ProtoReflect.Descriptor instead.
func (*GetAllReservationsFeedbackSectionsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{109}
}

func (x *GetAllReservationsFeedbackSectionsResponse) GetResult() []*FeedbackSection {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReservationFeedbackCommentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment               string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	ReservationFeedbackId int32  `protobuf:"varint,3,opt,name=reservationFeedbackId,proto3" json:"reservationFeedbackId,omitempty"`
}

func (x *ReservationFeedbackCommentParams) Reset() {
	*x = ReservationFeedbackCommentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationFeedbackCommentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationFeedbackCommentParams) ProtoMessage() {}

func (x *ReservationFeedbackCommentParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationFeedbackCommentParams.ProtoReflect.Descriptor instead.
func (*ReservationFeedbackCommentParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{110}
}

func (x *ReservationFeedbackCommentParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationFeedbackCommentParams) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ReservationFeedbackCommentParams) GetReservationFeedbackId() int32 {
	if x != nil {
		return x.ReservationFeedbackId
	}
	return 0
}

type ReservationFeedbackComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator   *CreatorProfile        `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Comment   string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationFeedbackComment) Reset() {
	*x = ReservationFeedbackComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationFeedbackComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationFeedbackComment) ProtoMessage() {}

func (x *ReservationFeedbackComment) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationFeedbackComment.ProtoReflect.Descriptor instead.
func (*ReservationFeedbackComment) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{111}
}

func (x *ReservationFeedbackComment) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationFeedbackComment) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ReservationFeedbackComment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ReservationFeedbackComment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationFeedbackComment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateReservationFeedbackCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationFeedbackCommentParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *CreateReservationFeedbackCommentRequest) Reset() {
	*x = CreateReservationFeedbackCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationFeedbackCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationFeedbackCommentRequest) ProtoMessage() {}

func (x *CreateReservationFeedbackCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationFeedbackCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateReservationFeedbackCommentRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{112}
}

func (x *CreateReservationFeedbackCommentRequest) GetParams() *ReservationFeedbackCommentParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateReservationFeedbackCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationFeedbackComment `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateReservationFeedbackCommentResponse) Reset() {
	*x = CreateReservationFeedbackCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationFeedbackCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationFeedbackCommentResponse) ProtoMessage() {}

func (x *CreateReservationFeedbackCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationFeedbackCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateReservationFeedbackCommentResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{113}
}

func (x *CreateReservationFeedbackCommentResponse) GetResult() *ReservationFeedbackComment {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllReservationFeedbackCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationFeedbackId int32 `protobuf:"varint,1,opt,name=reservationFeedbackId,proto3" json:"reservationFeedbackId,omitempty"`
}

func (x *GetAllReservationFeedbackCommentsRequest) Reset() {
	*x = GetAllReservationFeedbackCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationFeedbackCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationFeedbackCommentsRequest) ProtoMessage() {}

func (x *GetAllReservationFeedbackCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationFeedbackCommentsRequest.ProtoReflect.Descriptor instead.
func (*GetAllReservationFeedbackCommentsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{114}
}

func (x *GetAllReservationFeedbackCommentsRequest) GetReservationFeedbackId() int32 {
	if x != nil {
		return x.ReservationFeedbackId
	}
	return 0
}

type GetAllReservationFeedbackCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ReservationFeedbackComment `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllReservationFeedbackCommentsResponse) Reset() {
	*x = GetAllReservationFeedbackCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationFeedbackCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationFeedbackCommentsResponse) ProtoMessage() {}

func (x *GetAllReservationFeedbackCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationFeedbackCommentsResponse.ProtoReflect.Descriptor instead.
func (*GetAllReservationFeedbackCommentsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{115}
}

func (x *GetAllReservationFeedbackCommentsResponse) GetResult() []*ReservationFeedbackComment {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetReservationFeedbackCommentByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationFeedbackId int32 `protobuf:"varint,1,opt,name=reservationFeedbackId,proto3" json:"reservationFeedbackId,omitempty"`
	CommentId             int32 `protobuf:"varint,2,opt,name=commentId,proto3" json:"commentId,omitempty"`
}

func (x *GetReservationFeedbackCommentByIDRequest) Reset() {
	*x = GetReservationFeedbackCommentByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationFeedbackCommentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationFeedbackCommentByIDRequest) ProtoMessage() {}

func (x *GetReservationFeedbackCommentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationFeedbackCommentByIDRequest.ProtoReflect.Descriptor instead.
func (*GetReservationFeedbackCommentByIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{116}
}

func (x *GetReservationFeedbackCommentByIDRequest) GetReservationFeedbackId() int32 {
	if x != nil {
		return x.ReservationFeedbackId
	}
	return 0
}

func (x *GetReservationFeedbackCommentByIDRequest) GetCommentId() int32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type GetReservationFeedbackCommentByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationFeedbackComment `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetReservationFeedbackCommentByIDResponse) Reset() {
	*x = GetReservationFeedbackCommentByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationFeedbackCommentByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationFeedbackCommentByIDResponse) ProtoMessage() {}

func (x *GetReservationFeedbackCommentByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationFeedbackCommentByIDResponse.ProtoReflect.Descriptor instead.
func (*GetReservationFeedbackCommentByIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{117}
}

func (x *GetReservationFeedbackCommentByIDResponse) GetResult() *ReservationFeedbackComment {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateReservationFeedbackCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationFeedbackCommentParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateReservationFeedbackCommentRequest) Reset() {
	*x = UpdateReservationFeedbackCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationFeedbackCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationFeedbackCommentRequest) ProtoMessage() {}

func (x *UpdateReservationFeedbackCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationFeedbackCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateReservationFeedbackCommentRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{118}
}

func (x *UpdateReservationFeedbackCommentRequest) GetParams() *ReservationFeedbackCommentParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateReservationFeedbackCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationFeedbackComment `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateReservationFeedbackCommentResponse) Reset() {
	*x = UpdateReservationFeedbackCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationFeedbackCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationFeedbackCommentResponse) ProtoMessage() {}

func (x *UpdateReservationFeedbackCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationFeedbackCommentResponse.ProtoReflect.Descriptor instead.
func (*UpdateReservationFeedbackCommentResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{119}
}

func (x *UpdateReservationFeedbackCommentResponse) GetResult() *ReservationFeedbackComment {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReservationFeedbackSolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator   *CreatorProfile        `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Solution  string                 `protobuf:"bytes,3,opt,name=solution,proto3" json:"solution,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationFeedbackSolution) Reset() {
	*x = ReservationFeedbackSolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationFeedbackSolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationFeedbackSolution) ProtoMessage() {}

func (x *ReservationFeedbackSolution) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationFeedbackSolution.ProtoReflect.Descriptor instead.
func (*ReservationFeedbackSolution) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{120}
}

func (x *ReservationFeedbackSolution) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationFeedbackSolution) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ReservationFeedbackSolution) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

func (x *ReservationFeedbackSolution) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationFeedbackSolution) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ReservationFeedbackSolutionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackId int32  `protobuf:"varint,1,opt,name=feedbackId,proto3" json:"feedbackId,omitempty"`
	Solution   string `protobuf:"bytes,2,opt,name=solution,proto3" json:"solution,omitempty"`
}

func (x *ReservationFeedbackSolutionParams) Reset() {
	*x = ReservationFeedbackSolutionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationFeedbackSolutionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationFeedbackSolutionParams) ProtoMessage() {}

func (x *ReservationFeedbackSolutionParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationFeedbackSolutionParams.ProtoReflect.Descriptor instead.
func (*ReservationFeedbackSolutionParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{121}
}

func (x *ReservationFeedbackSolutionParams) GetFeedbackId() int32 {
	if x != nil {
		return x.FeedbackId
	}
	return 0
}

func (x *ReservationFeedbackSolutionParams) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

type AddReservationFeedbackSolutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationFeedbackSolutionParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *AddReservationFeedbackSolutionRequest) Reset() {
	*x = AddReservationFeedbackSolutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReservationFeedbackSolutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReservationFeedbackSolutionRequest) ProtoMessage() {}

func (x *AddReservationFeedbackSolutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReservationFeedbackSolutionRequest.ProtoReflect.Descriptor instead.
func (*AddReservationFeedbackSolutionRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{122}
}

func (x *AddReservationFeedbackSolutionRequest) GetParams() *ReservationFeedbackSolutionParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type AddReservationFeedbackSolutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationFeedbackSolution `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddReservationFeedbackSolutionResponse) Reset() {
	*x = AddReservationFeedbackSolutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReservationFeedbackSolutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReservationFeedbackSolutionResponse) ProtoMessage() {}

func (x *AddReservationFeedbackSolutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReservationFeedbackSolutionResponse.ProtoReflect.Descriptor instead.
func (*AddReservationFeedbackSolutionResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{123}
}

func (x *AddReservationFeedbackSolutionResponse) GetResult() *ReservationFeedbackSolution {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateReservationFeedbackFromWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate          int32  `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Feedback      string `protobuf:"bytes,2,opt,name=feedback,proto3" json:"feedback,omitempty"`
	ReservationId int32  `protobuf:"varint,3,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *CreateReservationFeedbackFromWebhookRequest) Reset() {
	*x = CreateReservationFeedbackFromWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationFeedbackFromWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationFeedbackFromWebhookRequest) ProtoMessage() {}

func (x *CreateReservationFeedbackFromWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationFeedbackFromWebhookRequest.ProtoReflect.Descriptor instead.
func (*CreateReservationFeedbackFromWebhookRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{124}
}

func (x *CreateReservationFeedbackFromWebhookRequest) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *CreateReservationFeedbackFromWebhookRequest) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *CreateReservationFeedbackFromWebhookRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type CreateReservationFeedbackFromWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateReservationFeedbackFromWebhookResponse) Reset() {
	*x = CreateReservationFeedbackFromWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReservationFeedbackFromWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReservationFeedbackFromWebhookResponse) ProtoMessage() {}

func (x *CreateReservationFeedbackFromWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReservationFeedbackFromWebhookResponse.ProtoReflect.Descriptor instead.
func (*CreateReservationFeedbackFromWebhookResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{125}
}

func (x *CreateReservationFeedbackFromWebhookResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateReservationFeedbackFromWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateReservationFromWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId int32  `protobuf:"varint,1,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	Status        string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateReservationFromWebhookRequest) Reset() {
	*x = UpdateReservationFromWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationFromWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationFromWebhookRequest) ProtoMessage() {}

func (x *UpdateReservationFromWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationFromWebhookRequest.ProtoReflect.Descriptor instead.
func (*UpdateReservationFromWebhookRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{126}
}

func (x *UpdateReservationFromWebhookRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *UpdateReservationFromWebhookRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateReservationFromWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateReservationFromWebhookResponse) Reset() {
	*x = UpdateReservationFromWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationFromWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationFromWebhookResponse) ProtoMessage() {}

func (x *UpdateReservationFromWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationFromWebhookResponse.ProtoReflect.Descriptor instead.
func (*UpdateReservationFromWebhookResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{127}
}

func (x *UpdateReservationFromWebhookResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateReservationFromWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CheckIfDayClosedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *CheckIfDayClosedRequest) Reset() {
	*x = CheckIfDayClosedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIfDayClosedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfDayClosedRequest) ProtoMessage() {}

func (x *CheckIfDayClosedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfDayClosedRequest.ProtoReflect.Descriptor instead.
func (*CheckIfDayClosedRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{128}
}

func (x *CheckIfDayClosedRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type CheckIfDayClosedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Closed bool `protobuf:"varint,1,opt,name=closed,proto3" json:"closed,omitempty"`
}

func (x *CheckIfDayClosedResponse) Reset() {
	*x = CheckIfDayClosedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIfDayClosedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfDayClosedResponse) ProtoMessage() {}

func (x *CheckIfDayClosedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfDayClosedResponse.ProtoReflect.Descriptor instead.
func (*CheckIfDayClosedResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{129}
}

func (x *CheckIfDayClosedResponse) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

type CloseDayOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	PinCode string `protobuf:"bytes,2,opt,name=pinCode,proto3" json:"pinCode,omitempty"`
}

func (x *CloseDayOperationsRequest) Reset() {
	*x = CloseDayOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDayOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDayOperationsRequest) ProtoMessage() {}

func (x *CloseDayOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDayOperationsRequest.ProtoReflect.Descriptor instead.
func (*CloseDayOperationsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{130}
}

func (x *CloseDayOperationsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CloseDayOperationsRequest) GetPinCode() string {
	if x != nil {
		return x.PinCode
	}
	return ""
}

type CloseDayOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CloseDayOperationsResponse) Reset() {
	*x = CloseDayOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDayOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDayOperationsResponse) ProtoMessage() {}

func (x *CloseDayOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDayOperationsResponse.ProtoReflect.Descriptor instead.
func (*CloseDayOperationsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{131}
}

func (x *CloseDayOperationsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CloseDayOperationsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReservationRequest) Reset() {
	*x = DeleteReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationRequest) ProtoMessage() {}

func (x *DeleteReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationRequest.ProtoReflect.Descriptor instead.
func (*DeleteReservationRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{132}
}

func (x *DeleteReservationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *Reservation `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteReservationResponse) Reset() {
	*x = DeleteReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationResponse) ProtoMessage() {}

func (x *DeleteReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationResponse.ProtoReflect.Descriptor instead.
func (*DeleteReservationResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{133}
}

func (x *DeleteReservationResponse) GetResult() *Reservation {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateReservationNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationNoteParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateReservationNoteRequest) Reset() {
	*x = UpdateReservationNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationNoteRequest) ProtoMessage() {}

func (x *UpdateReservationNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateReservationNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{134}
}

func (x *UpdateReservationNoteRequest) GetParams() *ReservationNoteParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateReservationNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationNote `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateReservationNoteResponse) Reset() {
	*x = UpdateReservationNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReservationNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReservationNoteResponse) ProtoMessage() {}

func (x *UpdateReservationNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReservationNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateReservationNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{135}
}

func (x *UpdateReservationNoteResponse) GetResult() *ReservationNote {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateGuestNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *GuestNoteParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateGuestNoteRequest) Reset() {
	*x = UpdateGuestNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGuestNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGuestNoteRequest) ProtoMessage() {}

func (x *UpdateGuestNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGuestNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateGuestNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{136}
}

func (x *UpdateGuestNoteRequest) GetParams() *GuestNoteParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateGuestNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *GuestNote `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateGuestNoteResponse) Reset() {
	*x = UpdateGuestNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGuestNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGuestNoteResponse) ProtoMessage() {}

func (x *UpdateGuestNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGuestNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateGuestNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{137}
}

func (x *UpdateGuestNoteResponse) GetResult() *GuestNote {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateWaitingReservationNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationWaitlistId int32  `protobuf:"varint,1,opt,name=reservationWaitlistId,proto3" json:"reservationWaitlistId,omitempty"`
	Description           string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateWaitingReservationNoteRequest) Reset() {
	*x = CreateWaitingReservationNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWaitingReservationNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingReservationNoteRequest) ProtoMessage() {}

func (x *CreateWaitingReservationNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingReservationNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateWaitingReservationNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{138}
}

func (x *CreateWaitingReservationNoteRequest) GetReservationWaitlistId() int32 {
	if x != nil {
		return x.ReservationWaitlistId
	}
	return 0
}

func (x *CreateWaitingReservationNoteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ReservationWaitlistNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationWaitlistId int32                  `protobuf:"varint,2,opt,name=reservationWaitlistId,proto3" json:"reservationWaitlistId,omitempty"`
	Description           string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Creator               *CreatorProfile        `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationWaitlistNote) Reset() {
	*x = ReservationWaitlistNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationWaitlistNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationWaitlistNote) ProtoMessage() {}

func (x *ReservationWaitlistNote) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationWaitlistNote.ProtoReflect.Descriptor instead.
func (*ReservationWaitlistNote) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{139}
}

func (x *ReservationWaitlistNote) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationWaitlistNote) GetReservationWaitlistId() int32 {
	if x != nil {
		return x.ReservationWaitlistId
	}
	return 0
}

func (x *ReservationWaitlistNote) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReservationWaitlistNote) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ReservationWaitlistNote) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationWaitlistNote) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateWaitingReservationNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationWaitlistNote `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateWaitingReservationNoteResponse) Reset() {
	*x = CreateWaitingReservationNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWaitingReservationNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitingReservationNoteResponse) ProtoMessage() {}

func (x *CreateWaitingReservationNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitingReservationNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateWaitingReservationNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{140}
}

func (x *CreateWaitingReservationNoteResponse) GetResult() *ReservationWaitlistNote {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateWaitingReservationDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *ReservationWaitlistParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateWaitingReservationDetailsRequest) Reset() {
	*x = UpdateWaitingReservationDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWaitingReservationDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaitingReservationDetailsRequest) ProtoMessage() {}

func (x *UpdateWaitingReservationDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaitingReservationDetailsRequest.ProtoReflect.Descriptor instead.
func (*UpdateWaitingReservationDetailsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{141}
}

func (x *UpdateWaitingReservationDetailsRequest) GetParams() *ReservationWaitlistParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateWaitingReservationDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationWaitlist `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateWaitingReservationDetailsResponse) Reset() {
	*x = UpdateWaitingReservationDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWaitingReservationDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaitingReservationDetailsResponse) ProtoMessage() {}

func (x *UpdateWaitingReservationDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaitingReservationDetailsResponse.ProtoReflect.Descriptor instead.
func (*UpdateWaitingReservationDetailsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{142}
}

func (x *UpdateWaitingReservationDetailsResponse) GetResult() *ReservationWaitlist {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateWaitingReservationNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateWaitingReservationNoteRequest) Reset() {
	*x = UpdateWaitingReservationNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWaitingReservationNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaitingReservationNoteRequest) ProtoMessage() {}

func (x *UpdateWaitingReservationNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaitingReservationNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateWaitingReservationNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{143}
}

func (x *UpdateWaitingReservationNoteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWaitingReservationNoteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateWaitingReservationNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationWaitlistNote `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateWaitingReservationNoteResponse) Reset() {
	*x = UpdateWaitingReservationNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWaitingReservationNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaitingReservationNoteResponse) ProtoMessage() {}

func (x *UpdateWaitingReservationNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaitingReservationNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateWaitingReservationNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{144}
}

func (x *UpdateWaitingReservationNoteResponse) GetResult() *ReservationWaitlistNote {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReservationWaitlistLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationWaitlistId int32                  `protobuf:"varint,2,opt,name=reservationWaitlistId,proto3" json:"reservationWaitlistId,omitempty"`
	Creator               *CreatorProfile        `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	MadeBy                string                 `protobuf:"bytes,4,opt,name=madeBy,proto3" json:"madeBy,omitempty"`
	FieldName             string                 `protobuf:"bytes,5,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	OldValue              string                 `protobuf:"bytes,6,opt,name=oldValue,proto3" json:"oldValue,omitempty"`
	NewValue              string                 `protobuf:"bytes,7,opt,name=newValue,proto3" json:"newValue,omitempty"`
	Action                string                 `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ReservationWaitlistLog) Reset() {
	*x = ReservationWaitlistLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationWaitlistLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationWaitlistLog) ProtoMessage() {}

func (x *ReservationWaitlistLog) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationWaitlistLog.ProtoReflect.Descriptor instead.
func (*ReservationWaitlistLog) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{145}
}

func (x *ReservationWaitlistLog) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReservationWaitlistLog) GetReservationWaitlistId() int32 {
	if x != nil {
		return x.ReservationWaitlistId
	}
	return 0
}

func (x *ReservationWaitlistLog) GetCreator() *CreatorProfile {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ReservationWaitlistLog) GetMadeBy() string {
	if x != nil {
		return x.MadeBy
	}
	return ""
}

func (x *ReservationWaitlistLog) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *ReservationWaitlistLog) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *ReservationWaitlistLog) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *ReservationWaitlistLog) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ReservationWaitlistLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ReservationWaitlistLog) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetAllReservationWaitlistLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationWaitlistId int32 `protobuf:"varint,1,opt,name=reservationWaitlistId,proto3" json:"reservationWaitlistId,omitempty"`
}

func (x *GetAllReservationWaitlistLogsRequest) Reset() {
	*x = GetAllReservationWaitlistLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationWaitlistLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationWaitlistLogsRequest) ProtoMessage() {}

func (x *GetAllReservationWaitlistLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationWaitlistLogsRequest.ProtoReflect.Descriptor instead.
func (*GetAllReservationWaitlistLogsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{146}
}

func (x *GetAllReservationWaitlistLogsRequest) GetReservationWaitlistId() int32 {
	if x != nil {
		return x.ReservationWaitlistId
	}
	return 0
}

type GetAllReservationWaitlistLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ReservationWaitlistLog `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllReservationWaitlistLogsResponse) Reset() {
	*x = GetAllReservationWaitlistLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationWaitlistLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationWaitlistLogsResponse) ProtoMessage() {}

func (x *GetAllReservationWaitlistLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationWaitlistLogsResponse.ProtoReflect.Descriptor instead.
func (*GetAllReservationWaitlistLogsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{147}
}

func (x *GetAllReservationWaitlistLogsResponse) GetResult() []*ReservationWaitlistLog {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetReservationOrderByReservationIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId int32 `protobuf:"varint,1,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *GetReservationOrderByReservationIDRequest) Reset() {
	*x = GetReservationOrderByReservationIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationOrderByReservationIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationOrderByReservationIDRequest) ProtoMessage() {}

func (x *GetReservationOrderByReservationIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationOrderByReservationIDRequest.ProtoReflect.Descriptor instead.
func (*GetReservationOrderByReservationIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{148}
}

func (x *GetReservationOrderByReservationIDRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type GetReservationOrderByReservationIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ReservationOrder `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetReservationOrderByReservationIDResponse) Reset() {
	*x = GetReservationOrderByReservationIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationOrderByReservationIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationOrderByReservationIDResponse) ProtoMessage() {}

func (x *GetReservationOrderByReservationIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationOrderByReservationIDResponse.ProtoReflect.Descriptor instead.
func (*GetReservationOrderByReservationIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{149}
}

func (x *GetReservationOrderByReservationIDResponse) GetResult() *ReservationOrder {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetReservationsCoverFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShiftId     int32   `protobuf:"varint,1,opt,name=shiftId,proto3" json:"shiftId,omitempty"`
	Date        string  `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	SeatingArea []int32 `protobuf:"varint,3,rep,packed,name=seatingArea,proto3" json:"seatingArea,omitempty"`
}

func (x *GetReservationsCoverFlowRequest) Reset() {
	*x = GetReservationsCoverFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationsCoverFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationsCoverFlowRequest) ProtoMessage() {}

func (x *GetReservationsCoverFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationsCoverFlowRequest.ProtoReflect.Descriptor instead.
func (*GetReservationsCoverFlowRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{150}
}

func (x *GetReservationsCoverFlowRequest) GetShiftId() int32 {
	if x != nil {
		return x.ShiftId
	}
	return 0
}

func (x *GetReservationsCoverFlowRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetReservationsCoverFlowRequest) GetSeatingArea() []int32 {
	if x != nil {
		return x.SeatingArea
	}
	return nil
}

type GetReservationsCoverFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*CoverFlow `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetReservationsCoverFlowResponse) Reset() {
	*x = GetReservationsCoverFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReservationsCoverFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReservationsCoverFlowResponse) ProtoMessage() {}

func (x *GetReservationsCoverFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReservationsCoverFlowResponse.ProtoReflect.Descriptor instead.
func (*GetReservationsCoverFlowResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{151}
}

func (x *GetReservationsCoverFlowResponse) GetResult() []*CoverFlow {
	if x != nil {
		return x.Result
	}
	return nil
}

type CoverFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time         string                  `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Reservations []*CoverFlowReservation `protobuf:"bytes,2,rep,name=reservations,proto3" json:"reservations,omitempty"`
}

func (x *CoverFlow) Reset() {
	*x = CoverFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoverFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoverFlow) ProtoMessage() {}

func (x *CoverFlow) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoverFlow.ProtoReflect.Descriptor instead.
func (*CoverFlow) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{152}
}

func (x *CoverFlow) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *CoverFlow) GetReservations() []*CoverFlowReservation {
	if x != nil {
		return x.Reservations
	}
	return nil
}

type CoverFlowReservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestsNumber int32                       `protobuf:"varint,2,opt,name=guestsNumber,proto3" json:"guestsNumber,omitempty"`
	Status       *CoverFlowReservationStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CoverFlowReservation) Reset() {
	*x = CoverFlowReservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoverFlowReservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoverFlowReservation) ProtoMessage() {}

func (x *CoverFlowReservation) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoverFlowReservation.ProtoReflect.Descriptor instead.
func (*CoverFlowReservation) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{153}
}

func (x *CoverFlowReservation) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoverFlowReservation) GetGuestsNumber() int32 {
	if x != nil {
		return x.GuestsNumber
	}
	return 0
}

func (x *CoverFlowReservation) GetStatus() *CoverFlowReservationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type CoverFlowReservationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Color string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Icon  string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *CoverFlowReservationStatus) Reset() {
	*x = CoverFlowReservationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoverFlowReservationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoverFlowReservationStatus) ProtoMessage() {}

func (x *CoverFlowReservationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoverFlowReservationStatus.ProtoReflect.Descriptor instead.
func (*CoverFlowReservationStatus) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{154}
}

func (x *CoverFlowReservationStatus) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoverFlowReservationStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoverFlowReservationStatus) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CoverFlowReservationStatus) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type ImportGuestsFromExcelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
}

func (x *ImportGuestsFromExcelRequest) Reset() {
	*x = ImportGuestsFromExcelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGuestsFromExcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGuestsFromExcelRequest) ProtoMessage() {}

func (x *ImportGuestsFromExcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGuestsFromExcelRequest.ProtoReflect.Descriptor instead.
func (*ImportGuestsFromExcelRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{155}
}

func (x *ImportGuestsFromExcelRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type ImportGuestsFromExcelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ImportGuestsFromExcelResponse) Reset() {
	*x = ImportGuestsFromExcelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGuestsFromExcelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGuestsFromExcelResponse) ProtoMessage() {}

func (x *ImportGuestsFromExcelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGuestsFromExcelResponse.ProtoReflect.Descriptor instead.
func (*ImportGuestsFromExcelResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{156}
}

func (x *ImportGuestsFromExcelResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ImportGuestsFromExcelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteGuestNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GuestId int32 `protobuf:"varint,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
}

func (x *DeleteGuestNoteRequest) Reset() {
	*x = DeleteGuestNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuestNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuestNoteRequest) ProtoMessage() {}

func (x *DeleteGuestNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuestNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteGuestNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{157}
}

func (x *DeleteGuestNoteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteGuestNoteRequest) GetGuestId() int32 {
	if x != nil {
		return x.GuestId
	}
	return 0
}

type DeleteGuestNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteGuestNoteResponse) Reset() {
	*x = DeleteGuestNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGuestNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGuestNoteResponse) ProtoMessage() {}

func (x *DeleteGuestNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGuestNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteGuestNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{158}
}

func (x *DeleteGuestNoteResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteGuestNoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteReservationNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationId int32 `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *DeleteReservationNoteRequest) Reset() {
	*x = DeleteReservationNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReservationNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationNoteRequest) ProtoMessage() {}

func (x *DeleteReservationNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteReservationNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{159}
}

func (x *DeleteReservationNoteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteReservationNoteRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type DeleteReservationNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message     string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Reservation *Reservation `protobuf:"bytes,3,opt,name=reservation,proto3" json:"reservation,omitempty"`
}

func (x *DeleteReservationNoteResponse) Reset() {
	*x = DeleteReservationNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReservationNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationNoteResponse) ProtoMessage() {}

func (x *DeleteReservationNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteReservationNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{160}
}

func (x *DeleteReservationNoteResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteReservationNoteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteReservationNoteResponse) GetReservation() *Reservation {
	if x != nil {
		return x.Reservation
	}
	return nil
}

type WidgetGuestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber string `protobuf:"bytes,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Language    string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	BirthDate   string `protobuf:"bytes,6,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	Primary     bool   `protobuf:"varint,7,opt,name=primary,proto3" json:"primary,omitempty"`
}

func (x *WidgetGuestParams) Reset() {
	*x = WidgetGuestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetGuestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetGuestParams) ProtoMessage() {}

func (x *WidgetGuestParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetGuestParams.ProtoReflect.Descriptor instead.
func (*WidgetGuestParams) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{161}
}

func (x *WidgetGuestParams) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *WidgetGuestParams) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *WidgetGuestParams) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *WidgetGuestParams) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *WidgetGuestParams) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *WidgetGuestParams) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *WidgetGuestParams) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

type CreateWidgetReservationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guests            []*WidgetGuestParams `protobuf:"bytes,1,rep,name=guests,proto3" json:"guests,omitempty"`
	BranchId          int32                `protobuf:"varint,2,opt,name=branchId,proto3" json:"branchId,omitempty"`
	SeatingAreaId     int32                `protobuf:"varint,3,opt,name=seatingAreaId,proto3" json:"seatingAreaId,omitempty"`
	GuestsNumber      int32                `protobuf:"varint,4,opt,name=guestsNumber,proto3" json:"guestsNumber,omitempty"`
	Date              string               `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Time              string               `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	ReservedVia       string               `protobuf:"bytes,7,opt,name=reservedVia,proto3" json:"reservedVia,omitempty"`
	SpecialOccasionId int32                `protobuf:"varint,8,opt,name=specialOccasionId,proto3" json:"specialOccasionId,omitempty"`
	Note              string               `protobuf:"bytes,9,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *CreateWidgetReservationRequest) Reset() {
	*x = CreateWidgetReservationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWidgetReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWidgetReservationRequest) ProtoMessage() {}

func (x *CreateWidgetReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWidgetReservationRequest.ProtoReflect.Descriptor instead.
func (*CreateWidgetReservationRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{162}
}

func (x *CreateWidgetReservationRequest) GetGuests() []*WidgetGuestParams {
	if x != nil {
		return x.Guests
	}
	return nil
}

func (x *CreateWidgetReservationRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *CreateWidgetReservationRequest) GetSeatingAreaId() int32 {
	if x != nil {
		return x.SeatingAreaId
	}
	return 0
}

func (x *CreateWidgetReservationRequest) GetGuestsNumber() int32 {
	if x != nil {
		return x.GuestsNumber
	}
	return 0
}

func (x *CreateWidgetReservationRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CreateWidgetReservationRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *CreateWidgetReservationRequest) GetReservedVia() string {
	if x != nil {
		return x.ReservedVia
	}
	return ""
}

func (x *CreateWidgetReservationRequest) GetSpecialOccasionId() int32 {
	if x != nil {
		return x.SpecialOccasionId
	}
	return 0
}

func (x *CreateWidgetReservationRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type CreateWidgetReservationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateWidgetReservationResponse) Reset() {
	*x = CreateWidgetReservationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWidgetReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWidgetReservationResponse) ProtoMessage() {}

func (x *CreateWidgetReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWidgetReservationResponse.ProtoReflect.Descriptor instead.
func (*CreateWidgetReservationResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{163}
}

func (x *CreateWidgetReservationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateWidgetReservationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetWidgetAllSpecialOccasionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId int32 `protobuf:"varint,1,opt,name=branchId,proto3" json:"branchId,omitempty"`
}

func (x *GetWidgetAllSpecialOccasionsRequest) Reset() {
	*x = GetWidgetAllSpecialOccasionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWidgetAllSpecialOccasionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWidgetAllSpecialOccasionsRequest) ProtoMessage() {}

func (x *GetWidgetAllSpecialOccasionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWidgetAllSpecialOccasionsRequest.ProtoReflect.Descriptor instead.
func (*GetWidgetAllSpecialOccasionsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{164}
}

func (x *GetWidgetAllSpecialOccasionsRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

type GetAllBookedViaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllBookedViaResponse) Reset() {
	*x = GetAllBookedViaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBookedViaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBookedViaResponse) ProtoMessage() {}

func (x *GetAllBookedViaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBookedViaResponse.ProtoReflect.Descriptor instead.
func (*GetAllBookedViaResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{165}
}

func (x *GetAllBookedViaResponse) GetResult() []string {
	if x != nil {
		return x.Result
	}
	return nil
}

type PaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId int32          `protobuf:"varint,1,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
	Items         []*PaymentItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Delivery      string         `protobuf:"bytes,3,opt,name=delivery,proto3" json:"delivery,omitempty"`
	Contacts      string         `protobuf:"bytes,4,opt,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *PaymentRequest) Reset() {
	*x = PaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequest) ProtoMessage() {}

func (x *PaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequest.ProtoReflect.Descriptor instead.
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{166}
}

func (x *PaymentRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *PaymentRequest) GetItems() []*PaymentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PaymentRequest) GetDelivery() string {
	if x != nil {
		return x.Delivery
	}
	return ""
}

func (x *PaymentRequest) GetContacts() string {
	if x != nil {
		return x.Contacts
	}
	return ""
}

type PaymentGuest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Address     string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *PaymentGuest) Reset() {
	*x = PaymentGuest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentGuest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentGuest) ProtoMessage() {}

func (x *PaymentGuest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentGuest.ProtoReflect.Descriptor instead.
func (*PaymentGuest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{167}
}

func (x *PaymentGuest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *PaymentGuest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PaymentGuest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *PaymentGuest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Branch   *PaymentBranch `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	Guest    *PaymentGuest  `protobuf:"bytes,3,opt,name=guest,proto3" json:"guest,omitempty"`
	Invoice  *Invoice       `protobuf:"bytes,4,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Card     *PaymentCard   `protobuf:"bytes,5,opt,name=card,proto3" json:"card,omitempty"`
	Status   string         `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Contacts int32          `protobuf:"varint,9,opt,name=contacts,proto3" json:"contacts,omitempty"`
	Delivery []string       `protobuf:"bytes,10,rep,name=delivery,proto3" json:"delivery,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{168}
}

func (x *PaymentResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentResponse) GetBranch() *PaymentBranch {
	if x != nil {
		return x.Branch
	}
	return nil
}

func (x *PaymentResponse) GetGuest() *PaymentGuest {
	if x != nil {
		return x.Guest
	}
	return nil
}

func (x *PaymentResponse) GetInvoice() *Invoice {
	if x != nil {
		return x.Invoice
	}
	return nil
}

func (x *PaymentResponse) GetCard() *PaymentCard {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *PaymentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentResponse) GetContacts() int32 {
	if x != nil {
		return x.Contacts
	}
	return 0
}

func (x *PaymentResponse) GetDelivery() []string {
	if x != nil {
		return x.Delivery
	}
	return nil
}

type PaymentCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastFourDigits string `protobuf:"bytes,1,opt,name=lastFourDigits,proto3" json:"lastFourDigits,omitempty"`
	CardType       string `protobuf:"bytes,2,opt,name=cardType,proto3" json:"cardType,omitempty"`
	CardExpireDate string `protobuf:"bytes,3,opt,name=cardExpireDate,proto3" json:"cardExpireDate,omitempty"`
}

func (x *PaymentCard) Reset() {
	*x = PaymentCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCard) ProtoMessage() {}

func (x *PaymentCard) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCard.ProtoReflect.Descriptor instead.
func (*PaymentCard) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{169}
}

func (x *PaymentCard) GetLastFourDigits() string {
	if x != nil {
		return x.LastFourDigits
	}
	return ""
}

func (x *PaymentCard) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *PaymentCard) GetCardExpireDate() string {
	if x != nil {
		return x.CardExpireDate
	}
	return ""
}

type PaymentBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address       string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	VatPercent    float32 `protobuf:"fixed32,3,opt,name=vatPercent,proto3" json:"vatPercent,omitempty"`
	ServiceCharge float32 `protobuf:"fixed32,4,opt,name=serviceCharge,proto3" json:"serviceCharge,omitempty"`
	CrNumber      string  `protobuf:"bytes,5,opt,name=crNumber,proto3" json:"crNumber,omitempty"`
	VatRegNumber  string  `protobuf:"bytes,6,opt,name=vatRegNumber,proto3" json:"vatRegNumber,omitempty"`
}

func (x *PaymentBranch) Reset() {
	*x = PaymentBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentBranch) ProtoMessage() {}

func (x *PaymentBranch) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentBranch.ProtoReflect.Descriptor instead.
func (*PaymentBranch) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{170}
}

func (x *PaymentBranch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentBranch) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PaymentBranch) GetVatPercent() float32 {
	if x != nil {
		return x.VatPercent
	}
	return 0
}

func (x *PaymentBranch) GetServiceCharge() float32 {
	if x != nil {
		return x.ServiceCharge
	}
	return 0
}

func (x *PaymentBranch) GetCrNumber() string {
	if x != nil {
		return x.CrNumber
	}
	return ""
}

func (x *PaymentBranch) GetVatRegNumber() string {
	if x != nil {
		return x.VatRegNumber
	}
	return ""
}

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId  string         `protobuf:"bytes,1,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	InvoiceRef string         `protobuf:"bytes,2,opt,name=invoiceRef,proto3" json:"invoiceRef,omitempty"`
	Date       string         `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Waiter     string         `protobuf:"bytes,4,opt,name=waiter,proto3" json:"waiter,omitempty"`
	Items      []*PaymentItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	SubTotal   float32        `protobuf:"fixed32,6,opt,name=subTotal,proto3" json:"subTotal,omitempty"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{171}
}

func (x *Invoice) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *Invoice) GetInvoiceRef() string {
	if x != nil {
		return x.InvoiceRef
	}
	return ""
}

func (x *Invoice) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Invoice) GetWaiter() string {
	if x != nil {
		return x.Waiter
	}
	return ""
}

func (x *Invoice) GetItems() []*PaymentItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Invoice) GetSubTotal() float32 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

type PaymentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price    float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity int32   `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *PaymentItem) Reset() {
	*x = PaymentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentItem) ProtoMessage() {}

func (x *PaymentItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentItem.ProtoReflect.Descriptor instead.
func (*PaymentItem) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{172}
}

func (x *PaymentItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PaymentItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetPaymentByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReservationId int32 `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *GetPaymentByIDRequest) Reset() {
	*x = GetPaymentByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentByIDRequest) ProtoMessage() {}

func (x *GetPaymentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentByIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{173}
}

func (x *GetPaymentByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPaymentByIDRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type GetPaymentByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PaymentResponse `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetPaymentByIDResponse) Reset() {
	*x = GetPaymentByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentByIDResponse) ProtoMessage() {}

func (x *GetPaymentByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentByIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{174}
}

func (x *GetPaymentByIDResponse) GetResult() *PaymentResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetAllReservationPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAllReservationPaymentsRequest) Reset() {
	*x = GetAllReservationPaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationPaymentsRequest) ProtoMessage() {}

func (x *GetAllReservationPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationPaymentsRequest.ProtoReflect.Descriptor instead.
func (*GetAllReservationPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{175}
}

func (x *GetAllReservationPaymentsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAllReservationPaymentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*PaymentResponse `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetAllReservationPaymentsResponse) Reset() {
	*x = GetAllReservationPaymentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllReservationPaymentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllReservationPaymentsResponse) ProtoMessage() {}

func (x *GetAllReservationPaymentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllReservationPaymentsResponse.ProtoReflect.Descriptor instead.
func (*GetAllReservationPaymentsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{176}
}

func (x *GetAllReservationPaymentsResponse) GetResult() []*PaymentResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type RequestReservationWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *RequestReservationWebhookRequest) Reset() {
	*x = RequestReservationWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestReservationWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReservationWebhookRequest) ProtoMessage() {}

func (x *RequestReservationWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReservationWebhookRequest.ProtoReflect.Descriptor instead.
func (*RequestReservationWebhookRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{177}
}

func (x *RequestReservationWebhookRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type RequestReservationWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RequestReservationWebhookResponse) Reset() {
	*x = RequestReservationWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestReservationWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReservationWebhookResponse) ProtoMessage() {}

func (x *RequestReservationWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReservationWebhookResponse.ProtoReflect.Descriptor instead.
func (*RequestReservationWebhookResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{178}
}

func (x *RequestReservationWebhookResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RequestReservationWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FourDigits string `protobuf:"bytes,1,opt,name=fourDigits,proto3" json:"fourDigits,omitempty"`
	Brand      string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *CardInfo) Reset() {
	*x = CardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardInfo) ProtoMessage() {}

func (x *CardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardInfo.ProtoReflect.Descriptor instead.
func (*CardInfo) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{179}
}

func (x *CardInfo) GetFourDigits() string {
	if x != nil {
		return x.FourDigits
	}
	return ""
}

func (x *CardInfo) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

type UpdatePaymentFromWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId string    `protobuf:"bytes,1,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Card      *CardInfo `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	Status    string    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdatePaymentFromWebhookRequest) Reset() {
	*x = UpdatePaymentFromWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentFromWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentFromWebhookRequest) ProtoMessage() {}

func (x *UpdatePaymentFromWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentFromWebhookRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentFromWebhookRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{180}
}

func (x *UpdatePaymentFromWebhookRequest) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *UpdatePaymentFromWebhookRequest) GetCard() *CardInfo {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *UpdatePaymentFromWebhookRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdatePaymentFromWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdatePaymentFromWebhookResponse) Reset() {
	*x = UpdatePaymentFromWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentFromWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentFromWebhookResponse) ProtoMessage() {}

func (x *UpdatePaymentFromWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentFromWebhookResponse.ProtoReflect.Descriptor instead.
func (*UpdatePaymentFromWebhookResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{181}
}

func (x *UpdatePaymentFromWebhookResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdatePaymentFromWebhookResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddReservationVisitorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VisitorIds    []int32 `protobuf:"varint,1,rep,packed,name=visitorIds,proto3" json:"visitorIds,omitempty"`
	ReservationId int32   `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *AddReservationVisitorsRequest) Reset() {
	*x = AddReservationVisitorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReservationVisitorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReservationVisitorsRequest) ProtoMessage() {}

func (x *AddReservationVisitorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReservationVisitorsRequest.ProtoReflect.Descriptor instead.
func (*AddReservationVisitorsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{182}
}

func (x *AddReservationVisitorsRequest) GetVisitorIds() []int32 {
	if x != nil {
		return x.VisitorIds
	}
	return nil
}

func (x *AddReservationVisitorsRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type AddReservationVisitorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddReservationVisitorsResponse) Reset() {
	*x = AddReservationVisitorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReservationVisitorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReservationVisitorsResponse) ProtoMessage() {}

func (x *AddReservationVisitorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReservationVisitorsResponse.ProtoReflect.Descriptor instead.
func (*AddReservationVisitorsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{183}
}

func (x *AddReservationVisitorsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddReservationVisitorsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteReservationVisitorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VisitorIds    []int32 `protobuf:"varint,1,rep,packed,name=visitorIds,proto3" json:"visitorIds,omitempty"`
	ReservationId int32   `protobuf:"varint,2,opt,name=reservationId,proto3" json:"reservationId,omitempty"`
}

func (x *DeleteReservationVisitorsRequest) Reset() {
	*x = DeleteReservationVisitorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReservationVisitorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationVisitorsRequest) ProtoMessage() {}

func (x *DeleteReservationVisitorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationVisitorsRequest.ProtoReflect.Descriptor instead.
func (*DeleteReservationVisitorsRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{184}
}

func (x *DeleteReservationVisitorsRequest) GetVisitorIds() []int32 {
	if x != nil {
		return x.VisitorIds
	}
	return nil
}

func (x *DeleteReservationVisitorsRequest) GetReservationId() int32 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

type DeleteReservationVisitorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteReservationVisitorsResponse) Reset() {
	*x = DeleteReservationVisitorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReservationVisitorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReservationVisitorsResponse) ProtoMessage() {}

func (x *DeleteReservationVisitorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReservationVisitorsResponse.ProtoReflect.Descriptor instead.
func (*DeleteReservationVisitorsResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{185}
}

func (x *DeleteReservationVisitorsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteReservationVisitorsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CancelPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId int32 `protobuf:"varint,1,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
}

func (x *CancelPaymentRequest) Reset() {
	*x = CancelPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPaymentRequest) ProtoMessage() {}

func (x *CancelPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPaymentRequest.ProtoReflect.Descriptor instead.
func (*CancelPaymentRequest) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{186}
}

func (x *CancelPaymentRequest) GetInvoiceId() int32 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

type CancelPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CancelPaymentResponse) Reset() {
	*x = CancelPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_guest_service_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPaymentResponse) ProtoMessage() {}

func (x *CancelPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_guest_service_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPaymentResponse.ProtoReflect.Descriptor instead.
func (*CancelPaymentResponse) Descriptor() ([]byte, []int) {
	return file_v1_guest_service_proto_rawDescGZIP(), []int{187}
}

func (x *CancelPaymentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CancelPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_v1_guest_service_proto protoreflect.FileDescriptor

var file_v1_guest_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x06, 0x0a, 0x05, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6f, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70,
	0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x53, 0x68,
	0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x6f, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x70, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f,
	0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x78, 0x0a, 0x0a, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb3, 0x03, 0x0a, 0x0b, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x61, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x54, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x54, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22,
	0xd3, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3b, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x22, 0xa9, 0x02, 0x0a, 0x0b, 0x54, 0x61, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x95,
	0x01, 0x0a, 0x11, 0x54, 0x61, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x69, 0x73, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x0f, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x82, 0x02, 0x0a, 0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x41, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x76, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x49, 0x0a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x7b, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x46, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4b, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x41, 0x64,
	0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x3f, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55,
	0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe,
	0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x71, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x8c, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x70, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x6f, 0x53,
	0x68, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4e, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x37, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x6c, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x50, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x50, 0x61, 0x69, 0x64, 0x22,
	0xa5, 0x09, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x06, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x33,
	0x0a, 0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x05, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x65, 0x64, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x56, 0x69, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56, 0x69, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x12,
	0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x30, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x75,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x35, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65,
	0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x70, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x66, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb2, 0x05, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x65, 0x61, 0x74, 0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56, 0x69, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x56, 0x69, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x51, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x36, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbb, 0x04, 0x0a,
	0x11, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x65, 0x61, 0x74, 0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56, 0x69, 0x61, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56,
	0x69, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63,
	0x61, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x15,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63,
	0x61, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x54, 0x61, 0x67, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x93, 0x03, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x70, 0x72, 0x65, 0x76, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x74, 0x61, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xe6, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x52, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x4d, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x80, 0x02, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x68, 0x69,
	0x66, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x87, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x52, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x85, 0x02, 0x0a, 0x11, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xcf, 0x02, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x6f, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72,
	0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72,
	0x65, 0x61, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x4d, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x49, 0x64, 0x22, 0x83, 0x05, 0x0a, 0x05, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x38, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x34, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x09, 0x66, 0x6c, 0x6f,
	0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x72, 0x65, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x79, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x79, 0x73, 0x54, 0x6f, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x46, 0x6c, 0x6f,
	0x6f, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb4,
	0x01, 0x0a, 0x04, 0x43, 0x61, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66,
	0x66, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x0f, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xd7, 0x03, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe5, 0x01, 0x0a,
	0x19, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64,
	0x22, 0x5f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x22, 0xb4, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x6f, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x57, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x52,
	0x0a, 0x1a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x22, 0xf7, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x64, 0x65, 0x42, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x64, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xba, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe5, 0x02, 0x0a, 0x08, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x64, 0x65,
	0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x64, 0x65, 0x42, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65,
	0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x48, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69,
	0x66, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x68, 0x69, 0x66,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5d, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xff, 0x03, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52,
	0x05, 0x73, 0x68, 0x69, 0x66, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x72, 0x65, 0x61, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd7, 0x02, 0x0a,
	0x19, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x61, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x5c, 0x0a, 0x20, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x74, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x52, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x74, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x61, 0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x61,
	0x74, 0x69, 0x73, 0x66, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x52, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x53, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x0c,
	0x59, 0x65, 0x61, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x32, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x6d, 0x6f,
	0x6e, 0x74, 0x68, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x59, 0x65, 0x61, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a,
	0x1a, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x68, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xd3, 0x01, 0x0a, 0x0f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x56, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63,
	0x61, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x62, 0x0a,
	0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x5d, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x89, 0x02, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0xaa, 0x02, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x62, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x5d, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x62, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x20,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64,
	0x22, 0xf1, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x70, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x6b, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x60, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x7e, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x70, 0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x6b, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xf4, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5f, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x25, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x6a, 0x0a, 0x26, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x2c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a, 0x23, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72,
	0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54,
	0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x44,
	0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x44, 0x61,
	0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x44, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x79, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5a, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4e, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x49, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7d, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69,
	0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x02, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61,
	0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x64, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x26, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x57, 0x0a, 0x23, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8f, 0x03, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x64, 0x65, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x61, 0x64, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5c, 0x0a, 0x24, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61,
	0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74,
	0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x51, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x63, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x71, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x68, 0x69,
	0x66, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x22, 0x52, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x66,
	0x0a, 0x09, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x45, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x6a, 0x0a, 0x1a, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x22, 0x3a, 0x0a, 0x1c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x4d, 0x0a, 0x1d,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d,
	0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0x47, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x89,
	0x01, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd9, 0x01, 0x0a, 0x11, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xca, 0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56, 0x69, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x56, 0x69,
	0x61, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x56, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x2f, 0x0a, 0x05, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0x79, 0x0a, 0x0b, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x46, 0x6f, 0x75, 0x72, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x76, 0x61, 0x74, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x61, 0x74, 0x52, 0x65, 0x67,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61,
	0x74, 0x52, 0x65, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xbf, 0x01, 0x0a, 0x07, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x69, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x63, 0x0a, 0x0b,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x32, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x44, 0x0a, 0x20, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x21, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x40, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x75, 0x72, 0x44, 0x69, 0x67, 0x69,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x75, 0x72, 0x44, 0x69,
	0x67, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x50, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x65, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0xfc, 0x0c, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x24, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x31, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x12, 0x29, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2a, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x2d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xfe, 0x0d, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x62, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x73, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x71, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x2a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95,
	0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x36, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x29, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x6c,
	0x6f, 0x77, 0x12, 0x2c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x12, 0x30, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42,
	0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x56, 0x69, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x24, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x56, 0x69, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x12, 0x2d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x68, 0x0a, 0x08, 0x67, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x5c,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x23, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x89, 0x02, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x12,
	0x6e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x86, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x31, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfa, 0x01, 0x0a, 0x1a, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f,
	0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63,
	0x61, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x4f, 0x63, 0x63, 0x61, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x85, 0x05, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x7a, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2d, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2f, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe1, 0x04,
	0x0a, 0x1a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x8f, 0x01, 0x0a,
	0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x34, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92,
	0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x81, 0x08, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x74, 0x57,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x61, 0x74, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x74,
	0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x8c, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x30, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x71, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xba, 0x01, 0x0a, 0x1a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x9b, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x38, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x46,
	0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xd7, 0x01, 0x0a, 0x0d, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x44,
	0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x44, 0x61,
	0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x66, 0x44, 0x61, 0x79, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61,
	0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44,
	0x61, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xff, 0x01, 0x0a,
	0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x74, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x82,
	0x04, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e,
	0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x2c,
	0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x6f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x6f, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x3b, 0x67, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_guest_service_proto_rawDescOnce sync.Once
	file_v1_guest_service_proto_rawDescData = file_v1_guest_service_proto_rawDesc
)

func file_v1_guest_service_proto_rawDescGZIP() []byte {
	file_v1_guest_service_proto_rawDescOnce.Do(func() {
		file_v1_guest_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_guest_service_proto_rawDescData)
	})
	return file_v1_guest_service_proto_rawDescData
}

var file_v1_guest_service_proto_msgTypes = make([]protoimpl.MessageInfo, 188)
var file_v1_guest_service_proto_goTypes = []interface{}{
	(*Guest)(nil),                                        // 0: guest_proto.Guest
	(*GuestShort)(nil),                                   // 1: guest_proto.GuestShort
	(*GuestParams)(nil),                                  // 2: guest_proto.GuestParams
	(*Tag)(nil),                                          // 3: guest_proto.Tag
	(*TagParams)(nil),                                    // 4: guest_proto.TagParams
	(*TagCategory)(nil),                                  // 5: guest_proto.TagCategory
	(*TagCategoryParams)(nil),                            // 6: guest_proto.TagCategoryParams
	(*GuestBranchVisits)(nil),                            // 7: guest_proto.GuestBranchVisits
	(*GuestNoteParams)(nil),                              // 8: guest_proto.GuestNoteParams
	(*GuestNote)(nil),                                    // 9: guest_proto.GuestNote
	(*CreateGuestRequest)(nil),                           // 10: guest_proto.CreateGuestRequest
	(*CreateGuestResponse)(nil),                          // 11: guest_proto.CreateGuestResponse
	(*GetAllGuestsRequest)(nil),                          // 12: guest_proto.GetAllGuestsRequest
	(*GetAllGuestsResponse)(nil),                         // 13: guest_proto.GetAllGuestsResponse
	(*GetGuestByIDRequest)(nil),                          // 14: guest_proto.GetGuestByIDRequest
	(*GetGuestByIDResponse)(nil),                         // 15: guest_proto.GetGuestByIDResponse
	(*UpdateGuestRequest)(nil),                           // 16: guest_proto.UpdateGuestRequest
	(*UpdateGuestResponse)(nil),                          // 17: guest_proto.UpdateGuestResponse
	(*AddGuestNoteRequest)(nil),                          // 18: guest_proto.AddGuestNoteRequest
	(*AddGuestNoteResponse)(nil),                         // 19: guest_proto.AddGuestNoteResponse
	(*GetAllGuestFeedbackRequest)(nil),                   // 20: guest_proto.GetAllGuestFeedbackRequest
	(*GetAllGuestFeedbackResponse)(nil),                  // 21: guest_proto.GetAllGuestFeedbackResponse
	(*GetGuestUpcomingReservationsRequest)(nil),          // 22: guest_proto.GetGuestUpcomingReservationsRequest
	(*GetGuestUpcomingReservationsResponse)(nil),         // 23: guest_proto.GetGuestUpcomingReservationsResponse
	(*CreatorProfile)(nil),                               // 24: guest_proto.CreatorProfile
	(*GetAllGuestReservationsRequest)(nil),               // 25: guest_proto.GetAllGuestReservationsRequest
	(*GetAllGuestReservationsResponse)(nil),              // 26: guest_proto.GetAllGuestReservationsResponse
	(*ReservationGuest)(nil),                             // 27: guest_proto.ReservationGuest
	(*ReservationBranch)(nil),                            // 28: guest_proto.ReservationBranch
	(*ReservationShift)(nil),                             // 29: guest_proto.ReservationShift
	(*ReservationPayment)(nil),                           // 30: guest_proto.ReservationPayment
	(*Reservation)(nil),                                  // 31: guest_proto.Reservation
	(*ReservationShort)(nil),                             // 32: guest_proto.ReservationShort
	(*ReservationParams)(nil),                            // 33: guest_proto.ReservationParams
	(*ReservationOrder)(nil),                             // 34: guest_proto.ReservationOrder
	(*ReservationOrderItem)(nil),                         // 35: guest_proto.ReservationOrderItem
	(*CreateReservationRequest)(nil),                     // 36: guest_proto.CreateReservationRequest
	(*CreateReservationResponse)(nil),                    // 37: guest_proto.CreateReservationResponse
	(*GetAllReservationsRequest)(nil),                    // 38: guest_proto.GetAllReservationsRequest
	(*GetAllReservationsResponse)(nil),                   // 39: guest_proto.GetAllReservationsResponse
	(*GetReservationByIDRequest)(nil),                    // 40: guest_proto.GetReservationByIDRequest
	(*GetReservationByIDResponse)(nil),                   // 41: guest_proto.GetReservationByIDResponse
	(*UpdateReservationRequest)(nil),                     // 42: guest_proto.UpdateReservationRequest
	(*UpdateReservationResponse)(nil),                    // 43: guest_proto.UpdateReservationResponse
	(*ReservationStatus)(nil),                            // 44: guest_proto.ReservationStatus
	(*Table)(nil),                                        // 45: guest_proto.Table
	(*SeatingArea)(nil),                                  // 46: guest_proto.SeatingArea
	(*Shift)(nil),                                        // 47: guest_proto.Shift
	(*FloorPlan)(nil),                                    // 48: guest_proto.FloorPlan
	(*Cast)(nil),                                         // 49: guest_proto.Cast
	(*Staff)(nil),                                        // 50: guest_proto.Staff
	(*Branch)(nil),                                       // 51: guest_proto.Branch
	(*FeedbackSection)(nil),                              // 52: guest_proto.FeedbackSection
	(*ReservationFeedbackShort)(nil),                     // 53: guest_proto.ReservationFeedbackShort
	(*ReservationFeedback)(nil),                          // 54: guest_proto.ReservationFeedback
	(*ReservationFeedbackParams)(nil),                    // 55: guest_proto.ReservationFeedbackParams
	(*ReservationSpecialOccasion)(nil),                   // 56: guest_proto.ReservationSpecialOccasion
	(*GetAvailableTimesRequest)(nil),                     // 57: guest_proto.GetAvailableTimesRequest
	(*GetAvailableTimesResponse)(nil),                    // 58: guest_proto.GetAvailableTimesResponse
	(*GetWidgetAvailableTimesRequest)(nil),               // 59: guest_proto.GetWidgetAvailableTimesRequest
	(*GetWidgetAvailableTimesResponse)(nil),              // 60: guest_proto.GetWidgetAvailableTimesResponse
	(*AvailableTime)(nil),                                // 61: guest_proto.AvailableTime
	(*ReservationNoteParams)(nil),                        // 62: guest_proto.ReservationNoteParams
	(*ReservationNote)(nil),                              // 63: guest_proto.ReservationNote
	(*AddReservationNoteRequest)(nil),                    // 64: guest_proto.AddReservationNoteRequest
	(*AddReservationNoteResponse)(nil),                   // 65: guest_proto.AddReservationNoteResponse
	(*Pagination)(nil),                                   // 66: guest_proto.Pagination
	(*PaginationParams)(nil),                             // 67: guest_proto.PaginationParams
	(*ReservationLog)(nil),                               // 68: guest_proto.ReservationLog
	(*ReservationLogParams)(nil),                         // 69: guest_proto.ReservationLogParams
	(*GuestLog)(nil),                                     // 70: guest_proto.GuestLog
	(*GuestLogParams)(nil),                               // 71: guest_proto.GuestLogParams
	(*GetAllReservationLogsRequest)(nil),                 // 72: guest_proto.GetAllReservationLogsRequest
	(*GetAllReservationLogsResponse)(nil),                // 73: guest_proto.GetAllReservationLogsResponse
	(*GetAllGuestLogsRequest)(nil),                       // 74: guest_proto.GetAllGuestLogsRequest
	(*GetAllGuestLogsResponse)(nil),                      // 75: guest_proto.GetAllGuestLogsResponse
	(*GetRealtimeReservationsRequest)(nil),               // 76: guest_proto.GetRealtimeReservationsRequest
	(*UpdateReservationTableRequest)(nil),                // 77: guest_proto.UpdateReservationTableRequest
	(*UpdateReservationTableResponse)(nil),               // 78: guest_proto.UpdateReservationTableResponse
	(*ReservationWaitlist)(nil),                          // 79: guest_proto.ReservationWaitlist
	(*ReservationWaitlistParams)(nil),                    // 80: guest_proto.ReservationWaitlistParams
	(*CreateWaitingReservationRequest)(nil),              // 81: guest_proto.CreateWaitingReservationRequest
	(*CreateWaitingReservationResponse)(nil),             // 82: guest_proto.CreateWaitingReservationResponse
	(*GetWaitingReservationsResponse)(nil),               // 83: guest_proto.GetWaitingReservationsResponse
	(*SeatWaitingReservationRequest)(nil),                // 84: guest_proto.SeatWaitingReservationRequest
	(*GetWaitingReservationRequest)(nil),                 // 85: guest_proto.GetWaitingReservationRequest
	(*GetWaitingReservationResponse)(nil),                // 86: guest_proto.GetWaitingReservationResponse
	(*SeatWaitingReservationResponse)(nil),               // 87: guest_proto.SeatWaitingReservationResponse
	(*ReservationStatusCount)(nil),                       // 88: guest_proto.ReservationStatusCount
	(*GuestStatistics)(nil),                              // 89: guest_proto.GuestStatistics
	(*GetGuestStatisticsRequest)(nil),                    // 90: guest_proto.GetGuestStatisticsRequest
	(*GetGuestStatisticsResponse)(nil),                   // 91: guest_proto.GetGuestStatisticsResponse
	(*MonthSpending)(nil),                                // 92: guest_proto.MonthSpending
	(*YearSpending)(nil),                                 // 93: guest_proto.YearSpending
	(*GetGuestSpendingRequest)(nil),                      // 94: guest_proto.GetGuestSpendingRequest
	(*GetGuestSpendingResponse)(nil),                     // 95: guest_proto.GetGuestSpendingResponse
	(*GetGuestReservationStatisticsRequest)(nil),         // 96: guest_proto.GetGuestReservationStatisticsRequest
	(*GuestReservationStatistics)(nil),                   // 97: guest_proto.GuestReservationStatistics
	(*GetGuestReservationStatisticsResponse)(nil),        // 98: guest_proto.GetGuestReservationStatisticsResponse
	(*SpecialOccasion)(nil),                              // 99: guest_proto.SpecialOccasion
	(*GetAllSpecialOccasionsResponse)(nil),               // 100: guest_proto.GetAllSpecialOccasionsResponse
	(*CreateReservationFeedbackRequest)(nil),             // 101: guest_proto.CreateReservationFeedbackRequest
	(*CreateReservationFeedbackResponse)(nil),            // 102: guest_proto.CreateReservationFeedbackResponse
	(*GetAllReservationsFeedbacksRequest)(nil),           // 103: guest_proto.GetAllReservationsFeedbacksRequest
	(*GetAllReservationsFeedbacksResponse)(nil),          // 104: guest_proto.GetAllReservationsFeedbacksResponse
	(*GetReservationFeedbackByIDRequest)(nil),            // 105: guest_proto.GetReservationFeedbackByIDRequest
	(*GetReservationFeedbackByIDResponse)(nil),           // 106: guest_proto.GetReservationFeedbackByIDResponse
	(*UpdateReservationFeedbackRequest)(nil),             // 107: guest_proto.UpdateReservationFeedbackRequest
	(*UpdateReservationFeedbackResponse)(nil),            // 108: guest_proto.UpdateReservationFeedbackResponse
	(*GetAllReservationsFeedbackSectionsResponse)(nil),   // 109: guest_proto.GetAllReservationsFeedbackSectionsResponse
	(*ReservationFeedbackCommentParams)(nil),             // 110: guest_proto.ReservationFeedbackCommentParams
	(*ReservationFeedbackComment)(nil),                   // 111: guest_proto.ReservationFeedbackComment
	(*CreateReservationFeedbackCommentRequest)(nil),      // 112: guest_proto.CreateReservationFeedbackCommentRequest
	(*CreateReservationFeedbackCommentResponse)(nil),     // 113: guest_proto.CreateReservationFeedbackCommentResponse
	(*GetAllReservationFeedbackCommentsRequest)(nil),     // 114: guest_proto.GetAllReservationFeedbackCommentsRequest
	(*GetAllReservationFeedbackCommentsResponse)(nil),    // 115: guest_proto.GetAllReservationFeedbackCommentsResponse
	(*GetReservationFeedbackCommentByIDRequest)(nil),     // 116: guest_proto.GetReservationFeedbackCommentByIDRequest
	(*GetReservationFeedbackCommentByIDResponse)(nil),    // 117: guest_proto.GetReservationFeedbackCommentByIDResponse
	(*UpdateReservationFeedbackCommentRequest)(nil),      // 118: guest_proto.UpdateReservationFeedbackCommentRequest
	(*UpdateReservationFeedbackCommentResponse)(nil),     // 119: guest_proto.UpdateReservationFeedbackCommentResponse
	(*ReservationFeedbackSolution)(nil),                  // 120: guest_proto.ReservationFeedbackSolution
	(*ReservationFeedbackSolutionParams)(nil),            // 121: guest_proto.ReservationFeedbackSolutionParams
	(*AddReservationFeedbackSolutionRequest)(nil),        // 122: guest_proto.AddReservationFeedbackSolutionRequest
	(*AddReservationFeedbackSolutionResponse)(nil),       // 123: guest_proto.AddReservationFeedbackSolutionResponse
	(*CreateReservationFeedbackFromWebhookRequest)(nil),  // 124: guest_proto.CreateReservationFeedbackFromWebhookRequest
	(*CreateReservationFeedbackFromWebhookResponse)(nil), // 125: guest_proto.CreateReservationFeedbackFromWebhookResponse
	(*UpdateReservationFromWebhookRequest)(nil),          // 126: guest_proto.UpdateReservationFromWebhookRequest
	(*UpdateReservationFromWebhookResponse)(nil),         // 127: guest_proto.UpdateReservationFromWebhookResponse
	(*CheckIfDayClosedRequest)(nil),                      // 128: guest_proto.CheckIfDayClosedRequest
	(*CheckIfDayClosedResponse)(nil),                     // 129: guest_proto.CheckIfDayClosedResponse
	(*CloseDayOperationsRequest)(nil),                    // 130: guest_proto.CloseDayOperationsRequest
	(*CloseDayOperationsResponse)(nil),                   // 131: guest_proto.CloseDayOperationsResponse
	(*DeleteReservationRequest)(nil),                     // 132: guest_proto.DeleteReservationRequest
	(*DeleteReservationResponse)(nil),                    // 133: guest_proto.DeleteReservationResponse
	(*UpdateReservationNoteRequest)(nil),                 // 134: guest_proto.UpdateReservationNoteRequest
	(*UpdateReservationNoteResponse)(nil),                // 135: guest_proto.UpdateReservationNoteResponse
	(*UpdateGuestNoteRequest)(nil),                       // 136: guest_proto.UpdateGuestNoteRequest
	(*UpdateGuestNoteResponse)(nil),                      // 137: guest_proto.UpdateGuestNoteResponse
	(*CreateWaitingReservationNoteRequest)(nil),          // 138: guest_proto.CreateWaitingReservationNoteRequest
	(*ReservationWaitlistNote)(nil),                      // 139: guest_proto.ReservationWaitlistNote
	(*CreateWaitingReservationNoteResponse)(nil),         // 140: guest_proto.CreateWaitingReservationNoteResponse
	(*UpdateWaitingReservationDetailsRequest)(nil),       // 141: guest_proto.UpdateWaitingReservationDetailsRequest
	(*UpdateWaitingReservationDetailsResponse)(nil),      // 142: guest_proto.UpdateWaitingReservationDetailsResponse
	(*UpdateWaitingReservationNoteRequest)(nil),          // 143: guest_proto.UpdateWaitingReservationNoteRequest
	(*UpdateWaitingReservationNoteResponse)(nil),         // 144: guest_proto.UpdateWaitingReservationNoteResponse
	(*ReservationWaitlistLog)(nil),                       // 145: guest_proto.ReservationWaitlistLog
	(*GetAllReservationWaitlistLogsRequest)(nil),         // 146: guest_proto.GetAllReservationWaitlistLogsRequest
	(*GetAllReservationWaitlistLogsResponse)(nil),        // 147: guest_proto.GetAllReservationWaitlistLogsResponse
	(*GetReservationOrderByReservationIDRequest)(nil),    // 148: guest_proto.GetReservationOrderByReservationIDRequest
	(*GetReservationOrderByReservationIDResponse)(nil),   // 149: guest_proto.GetReservationOrderByReservationIDResponse
	(*GetReservationsCoverFlowRequest)(nil),              // 150: guest_proto.GetReservationsCoverFlowRequest
	(*GetReservationsCoverFlowResponse)(nil),             // 151: guest_proto.GetReservationsCoverFlowResponse
	(*CoverFlow)(nil),                                    // 152: guest_proto.CoverFlow
	(*CoverFlowReservation)(nil),                         // 153: guest_proto.CoverFlowReservation
	(*CoverFlowReservationStatus)(nil),                   // 154: guest_proto.CoverFlowReservationStatus
	(*ImportGuestsFromExcelRequest)(nil),                 // 155: guest_proto.ImportGuestsFromExcelRequest
	(*ImportGuestsFromExcelResponse)(nil),                // 156: guest_proto.ImportGuestsFromExcelResponse
	(*DeleteGuestNoteRequest)(nil),                       // 157: guest_proto.DeleteGuestNoteRequest
	(*DeleteGuestNoteResponse)(nil),                      // 158: guest_proto.DeleteGuestNoteResponse
	(*DeleteReservationNoteRequest)(nil),                 // 159: guest_proto.DeleteReservationNoteRequest
	(*DeleteReservationNoteResponse)(nil),                // 160: guest_proto.DeleteReservationNoteResponse
	(*WidgetGuestParams)(nil),                            // 161: guest_proto.WidgetGuestParams
	(*CreateWidgetReservationRequest)(nil),               // 162: guest_proto.CreateWidgetReservationRequest
	(*CreateWidgetReservationResponse)(nil),              // 163: guest_proto.CreateWidgetReservationResponse
	(*GetWidgetAllSpecialOccasionsRequest)(nil),          // 164: guest_proto.GetWidgetAllSpecialOccasionsRequest
	(*GetAllBookedViaResponse)(nil),                      // 165: guest_proto.GetAllBookedViaResponse
	(*PaymentRequest)(nil),                               // 166: guest_proto.PaymentRequest
	(*PaymentGuest)(nil),                                 // 167: guest_proto.PaymentGuest
	(*PaymentResponse)(nil),                              // 168: guest_proto.PaymentResponse
	(*PaymentCard)(nil),                                  // 169: guest_proto.PaymentCard
	(*PaymentBranch)(nil),                                // 170: guest_proto.PaymentBranch
	(*Invoice)(nil),                                      // 171: guest_proto.Invoice
	(*PaymentItem)(nil),                                  // 172: guest_proto.PaymentItem
	(*GetPaymentByIDRequest)(nil),                        // 173: guest_proto.GetPaymentByIDRequest
	(*GetPaymentByIDResponse)(nil),                       // 174: guest_proto.GetPaymentByIDResponse
	(*GetAllReservationPaymentsRequest)(nil),             // 175: guest_proto.GetAllReservationPaymentsRequest
	(*GetAllReservationPaymentsResponse)(nil),            // 176: guest_proto.GetAllReservationPaymentsResponse
	(*RequestReservationWebhookRequest)(nil),             // 177: guest_proto.RequestReservationWebhookRequest
	(*RequestReservationWebhookResponse)(nil),            // 178: guest_proto.RequestReservationWebhookResponse
	(*CardInfo)(nil),                                     // 179: guest_proto.CardInfo
	(*UpdatePaymentFromWebhookRequest)(nil),              // 180: guest_proto.UpdatePaymentFromWebhookRequest
	(*UpdatePaymentFromWebhookResponse)(nil),             // 181: guest_proto.UpdatePaymentFromWebhookResponse
	(*AddReservationVisitorsRequest)(nil),                // 182: guest_proto.AddReservationVisitorsRequest
	(*AddReservationVisitorsResponse)(nil),               // 183: guest_proto.AddReservationVisitorsResponse
	(*DeleteReservationVisitorsRequest)(nil),             // 184: guest_proto.DeleteReservationVisitorsRequest
	(*DeleteReservationVisitorsResponse)(nil),            // 185: guest_proto.DeleteReservationVisitorsResponse
	(*CancelPaymentRequest)(nil),                         // 186: guest_proto.CancelPaymentRequest
	(*CancelPaymentResponse)(nil),                        // 187: guest_proto.CancelPaymentResponse
	(*timestamppb.Timestamp)(nil),                        // 188: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                // 189: google.protobuf.Empty
}
var file_v1_guest_service_proto_depIdxs = []int32{
	188, // 0: guest_proto.Guest.birthDate:type_name -> google.protobuf.Timestamp
	188, // 1: guest_proto.Guest.lastVisit:type_name -> google.protobuf.Timestamp
	7,   // 2: guest_proto.Guest.branches:type_name -> guest_proto.GuestBranchVisits
	3,   // 3: guest_proto.Guest.tags:type_name -> guest_proto.Tag
	9,   // 4: guest_proto.Guest.notes:type_name -> guest_proto.GuestNote
	188, // 5: guest_proto.Guest.createdAt:type_name -> google.protobuf.Timestamp
	188, // 6: guest_proto.Guest.updatedAt:type_name -> google.protobuf.Timestamp
	4,   // 7: guest_proto.GuestParams.tags:type_name -> guest_proto.TagParams
	5,   // 8: guest_proto.Tag.category:type_name -> guest_proto.TagCategory
	188, // 9: guest_proto.Tag.createdAt:type_name -> google.protobuf.Timestamp
	188, // 10: guest_proto.Tag.updatedAt:type_name -> google.protobuf.Timestamp
	3,   // 11: guest_proto.TagCategory.tags:type_name -> guest_proto.Tag
	188, // 12: guest_proto.TagCategory.createdAt:type_name -> google.protobuf.Timestamp
	188, // 13: guest_proto.TagCategory.updatedAt:type_name -> google.protobuf.Timestamp
	24,  // 14: guest_proto.GuestNote.creator:type_name -> guest_proto.CreatorProfile
	188, // 15: guest_proto.GuestNote.createdAt:type_name -> google.protobuf.Timestamp
	188, // 16: guest_proto.GuestNote.updatedAt:type_name -> google.protobuf.Timestamp
	2,   // 17: guest_proto.CreateGuestRequest.params:type_name -> guest_proto.GuestParams
	0,   // 18: guest_proto.CreateGuestResponse.result:type_name -> guest_proto.Guest
	67,  // 19: guest_proto.GetAllGuestsRequest.paginationParams:type_name -> guest_proto.PaginationParams
	66,  // 20: guest_proto.GetAllGuestsResponse.pagination:type_name -> guest_proto.Pagination
	0,   // 21: guest_proto.GetAllGuestsResponse.result:type_name -> guest_proto.Guest
	0,   // 22: guest_proto.GetGuestByIDResponse.result:type_name -> guest_proto.Guest
	2,   // 23: guest_proto.UpdateGuestRequest.params:type_name -> guest_proto.GuestParams
	0,   // 24: guest_proto.UpdateGuestResponse.result:type_name -> guest_proto.Guest
	8,   // 25: guest_proto.AddGuestNoteRequest.params:type_name -> guest_proto.GuestNoteParams
	9,   // 26: guest_proto.AddGuestNoteResponse.result:type_name -> guest_proto.GuestNote
	54,  // 27: guest_proto.GetAllGuestFeedbackResponse.result:type_name -> guest_proto.ReservationFeedback
	31,  // 28: guest_proto.GetGuestUpcomingReservationsResponse.result:type_name -> guest_proto.Reservation
	67,  // 29: guest_proto.GetAllGuestReservationsRequest.params:type_name -> guest_proto.PaginationParams
	66,  // 30: guest_proto.GetAllGuestReservationsResponse.pagination:type_name -> guest_proto.Pagination
	31,  // 31: guest_proto.GetAllGuestReservationsResponse.result:type_name -> guest_proto.Reservation
	9,   // 32: guest_proto.ReservationGuest.note:type_name -> guest_proto.GuestNote
	3,   // 33: guest_proto.ReservationGuest.tags:type_name -> guest_proto.Tag
	27,  // 34: guest_proto.Reservation.guests:type_name -> guest_proto.ReservationGuest
	28,  // 35: guest_proto.Reservation.branch:type_name -> guest_proto.ReservationBranch
	29,  // 36: guest_proto.Reservation.shift:type_name -> guest_proto.ReservationShift
	45,  // 37: guest_proto.Reservation.tables:type_name -> guest_proto.Table
	188, // 38: guest_proto.Reservation.date:type_name -> google.protobuf.Timestamp
	188, // 39: guest_proto.Reservation.time:type_name -> google.protobuf.Timestamp
	188, // 40: guest_proto.Reservation.checkIn:type_name -> google.protobuf.Timestamp
	44,  // 41: guest_proto.Reservation.status:type_name -> guest_proto.ReservationStatus
	56,  // 42: guest_proto.Reservation.specialOccasion:type_name -> guest_proto.ReservationSpecialOccasion
	3,   // 43: guest_proto.Reservation.tags:type_name -> guest_proto.Tag
	63,  // 44: guest_proto.Reservation.note:type_name -> guest_proto.ReservationNote
	53,  // 45: guest_proto.Reservation.feedback:type_name -> guest_proto.ReservationFeedbackShort
	188, // 46: guest_proto.Reservation.checkOut:type_name -> google.protobuf.Timestamp
	24,  // 47: guest_proto.Reservation.creator:type_name -> guest_proto.CreatorProfile
	30,  // 48: guest_proto.Reservation.payment:type_name -> guest_proto.ReservationPayment
	188, // 49: guest_proto.Reservation.createdAt:type_name -> google.protobuf.Timestamp
	188, // 50: guest_proto.Reservation.updatedAt:type_name -> google.protobuf.Timestamp
	51,  // 51: guest_proto.ReservationShort.branch:type_name -> guest_proto.Branch
	188, // 52: guest_proto.ReservationShort.date:type_name -> google.protobuf.Timestamp
	188, // 53: guest_proto.ReservationShort.time:type_name -> google.protobuf.Timestamp
	188, // 54: guest_proto.ReservationShort.checkIn:type_name -> google.protobuf.Timestamp
	44,  // 55: guest_proto.ReservationShort.status:type_name -> guest_proto.ReservationStatus
	56,  // 56: guest_proto.ReservationShort.specialOccasion:type_name -> guest_proto.ReservationSpecialOccasion
	45,  // 57: guest_proto.ReservationShort.tables:type_name -> guest_proto.Table
	188, // 58: guest_proto.ReservationShort.checkOut:type_name -> google.protobuf.Timestamp
	188, // 59: guest_proto.ReservationShort.createdAt:type_name -> google.protobuf.Timestamp
	188, // 60: guest_proto.ReservationShort.updatedAt:type_name -> google.protobuf.Timestamp
	4,   // 61: guest_proto.ReservationParams.tags:type_name -> guest_proto.TagParams
	35,  // 62: guest_proto.ReservationOrder.items:type_name -> guest_proto.ReservationOrderItem
	188, // 63: guest_proto.ReservationOrder.createdAt:type_name -> google.protobuf.Timestamp
	188, // 64: guest_proto.ReservationOrder.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 65: guest_proto.ReservationOrderItem.createdAt:type_name -> google.protobuf.Timestamp
	188, // 66: guest_proto.ReservationOrderItem.updatedAt:type_name -> google.protobuf.Timestamp
	33,  // 67: guest_proto.CreateReservationRequest.params:type_name -> guest_proto.ReservationParams
	31,  // 68: guest_proto.CreateReservationResponse.result:type_name -> guest_proto.Reservation
	67,  // 69: guest_proto.GetAllReservationsRequest.paginationParams:type_name -> guest_proto.PaginationParams
	66,  // 70: guest_proto.GetAllReservationsResponse.pagination:type_name -> guest_proto.Pagination
	31,  // 71: guest_proto.GetAllReservationsResponse.result:type_name -> guest_proto.Reservation
	31,  // 72: guest_proto.GetReservationByIDResponse.result:type_name -> guest_proto.Reservation
	33,  // 73: guest_proto.UpdateReservationRequest.params:type_name -> guest_proto.ReservationParams
	31,  // 74: guest_proto.UpdateReservationResponse.result:type_name -> guest_proto.Reservation
	188, // 75: guest_proto.ReservationStatus.createdAt:type_name -> google.protobuf.Timestamp
	188, // 76: guest_proto.ReservationStatus.updatedAt:type_name -> google.protobuf.Timestamp
	46,  // 77: guest_proto.Table.seatingArea:type_name -> guest_proto.SeatingArea
	188, // 78: guest_proto.Table.createdAt:type_name -> google.protobuf.Timestamp
	188, // 79: guest_proto.Table.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 80: guest_proto.Shift.from:type_name -> google.protobuf.Timestamp
	188, // 81: guest_proto.Shift.to:type_name -> google.protobuf.Timestamp
	188, // 82: guest_proto.Shift.startDate:type_name -> google.protobuf.Timestamp
	188, // 83: guest_proto.Shift.endDate:type_name -> google.protobuf.Timestamp
	48,  // 84: guest_proto.Shift.floorPlan:type_name -> guest_proto.FloorPlan
	46,  // 85: guest_proto.Shift.seatingAreas:type_name -> guest_proto.SeatingArea
	188, // 86: guest_proto.Shift.createdAt:type_name -> google.protobuf.Timestamp
	188, // 87: guest_proto.Shift.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 88: guest_proto.FloorPlan.createdAt:type_name -> google.protobuf.Timestamp
	188, // 89: guest_proto.FloorPlan.updatedAt:type_name -> google.protobuf.Timestamp
	50,  // 90: guest_proto.Cast.staff:type_name -> guest_proto.Staff
	188, // 91: guest_proto.Cast.createdAt:type_name -> google.protobuf.Timestamp
	188, // 92: guest_proto.Cast.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 93: guest_proto.Staff.createdAt:type_name -> google.protobuf.Timestamp
	188, // 94: guest_proto.Staff.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 95: guest_proto.Branch.createdAt:type_name -> google.protobuf.Timestamp
	188, // 96: guest_proto.Branch.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 97: guest_proto.FeedbackSection.createdAt:type_name -> google.protobuf.Timestamp
	188, // 98: guest_proto.FeedbackSection.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 99: guest_proto.ReservationFeedbackShort.createdAt:type_name -> google.protobuf.Timestamp
	1,   // 100: guest_proto.ReservationFeedback.guest:type_name -> guest_proto.GuestShort
	32,  // 101: guest_proto.ReservationFeedback.reservation:type_name -> guest_proto.ReservationShort
	120, // 102: guest_proto.ReservationFeedback.solution:type_name -> guest_proto.ReservationFeedbackSolution
	52,  // 103: guest_proto.ReservationFeedback.sections:type_name -> guest_proto.FeedbackSection
	188, // 104: guest_proto.ReservationFeedback.createdAt:type_name -> google.protobuf.Timestamp
	188, // 105: guest_proto.ReservationFeedback.updatedAt:type_name -> google.protobuf.Timestamp
	188, // 106: guest_proto.ReservationSpecialOccasion.createdAt:type_name -> google.protobuf.Timestamp
	188, // 107: guest_proto.ReservationSpecialOccasion.updatedAt:type_name -> google.protobuf.Timestamp
	61,  // 108: guest_proto.GetAvailableTimesResponse.availableTimes:type_name -> guest_proto.AvailableTime
	61,  // 109: guest_proto.GetWidgetAvailableTimesResponse.availableTimes:type_name -> guest_proto.AvailableTime
	188, // 110: guest_proto.AvailableTime.time:type_name -> google.protobuf.Timestamp
	24,  // 111: guest_proto.ReservationNote.creator:type_name -> guest_proto.CreatorProfile
	31,  // 112: guest_proto.ReservationNote.reservation:type_name -> guest_proto.Reservation
	188, // 113: guest_proto.ReservationNote.createdAt:type_name -> google.protobuf.Timestamp
	188, // 114: guest_proto.ReservationNote.updatedAt:type_name -> google.protobuf.Timestamp
	62,  // 115: guest_proto.AddReservationNoteRequest.params:type_name -> guest_proto.ReservationNoteParams
	63,  // 116: guest_proto.AddReservationNoteResponse.result:type_name -> guest_proto.ReservationNote
	24,  // 117: guest_proto.ReservationLog.creator:type_name -> guest_proto.CreatorProfile
	188, // 118: guest_proto.ReservationLog.createdAt:type_name -> google.protobuf.Timestamp
	188, // 119: guest_proto.ReservationLog.updatedAt:type_name -> google.protobuf.Timestamp
	24,  // 120: guest_proto.GuestLog.creator:type_name -> guest_proto.CreatorProfile
	188, // 121: guest_proto.GuestLog.createdAt:type_name -> google.protobuf.Timestamp
	188, // 122: guest_proto.GuestLog.updatedAt:type_name -> google.protobuf.Timestamp
	68,  // 123: guest_proto.GetAllReservationLogsResponse.result:type_name -> guest_proto.ReservationLog
	70,  // 124: guest_proto.GetAllGuestLogsResponse.result:type_name -> guest_proto.GuestLog
	31,  // 125: guest_proto.UpdateReservationTableResponse.result:type_name -> guest_proto.Reservation
	0,   // 126: guest_proto.ReservationWaitlist.guest:type_name -> guest_proto.Guest
	47,  // 127: guest_proto.ReservationWaitlist.shift:type_name -> guest_proto.Shift
	46,  // 128: guest_proto.ReservationWaitlist.seatingArea:type_name -> guest_proto.SeatingArea
	139, // 129: guest_proto.ReservationWaitlist.note:type_name -> guest_proto.ReservationWaitlistNote
	3,   // 130: guest_proto.ReservationWaitlist.tags:type_name -> guest_proto.Tag
	188, // 131: guest_proto.ReservationWaitlist.createdAt:type_name -> google.protobuf.Timestamp
	188, // 132: guest_proto.ReservationWaitlist.updatedAt:type_name -> google.protobuf.Timestamp
	4,   // 133: guest_proto.ReservationWaitlistParams.tags:type_name -> guest_proto.TagParams
	80,  // 134: guest_proto.CreateWaitingReservationRequest.params:type_name -> guest_proto.ReservationWaitlistParams
	79,  // 135: guest_proto.CreateWaitingReservationResponse.result:type_name -> guest_proto.ReservationWaitlist
	79,  // 136: guest_proto.GetWaitingReservationsResponse.result:type_name -> guest_proto.ReservationWaitlist
	79,  // 137: guest_proto.GetWaitingReservationResponse.result:type_name -> guest_proto.ReservationWaitlist
	31,  // 138: guest_proto.SeatWaitingReservationResponse.result:type_name -> guest_proto.Reservation
	89,  // 139: guest_proto.GetGuestStatisticsResponse.result:type_name -> guest_proto.GuestStatistics
	92,  // 140: guest_proto.YearSpending.months:type_name -> guest_proto.MonthSpending
	93,  // 141: guest_proto.GetGuestSpendingResponse.result:type_name -> guest_proto.YearSpending
	97,  // 142: guest_proto.GetGuestReservationStatisticsResponse.result:type_name -> guest_proto.GuestReservationStatistics
	188, // 143: guest_proto.SpecialOccasion.createdAt:type_name -> google.protobuf.Timestamp
	188, // 144: guest_proto.SpecialOccasion.updatedAt:type_name -> google.protobuf.Timestamp
	99,  // 145: guest_proto.GetAllSpecialOccasionsResponse.result:type_name -> guest_proto.SpecialOccasion
	55,  // 146: guest_proto.CreateReservationFeedbackRequest.params:type_name -> guest_proto.ReservationFeedbackParams
	54,  // 147: guest_proto.CreateReservationFeedbackResponse.result:type_name -> guest_proto.ReservationFeedback
	67,  // 148: guest_proto.GetAllReservationsFeedbacksRequest.paginationParams:type_name -> guest_proto.PaginationParams
	66,  // 149: guest_proto.GetAllReservationsFeedbacksResponse.pagination:type_name -> guest_proto.Pagination
	54,  // 150: guest_proto.GetAllReservationsFeedbacksResponse.result:type_name -> guest_proto.ReservationFeedback
	54,  // 151: guest_proto.GetReservationFeedbackByIDResponse.result:type_name -> guest_proto.ReservationFeedback
	55,  // 152: guest_proto.UpdateReservationFeedbackRequest.params:type_name -> guest_proto.ReservationFeedbackParams
	54,  // 153: guest_proto.UpdateReservationFeedbackResponse.result:type_name -> guest_proto.ReservationFeedback
	52,  // 154: guest_proto.GetAllReservationsFeedbackSectionsResponse.result:type_name -> guest_proto.FeedbackSection
	24,  // 155: guest_proto.ReservationFeedbackComment.creator:type_name -> guest_proto.CreatorProfile
	188, // 156: guest_proto.ReservationFeedbackComment.createdAt:type_name -> google.protobuf.Timestamp
	188, // 157: guest_proto.ReservationFeedbackComment.updatedAt:type_name -> google.protobuf.Timestamp
	110, // 158: guest_proto.CreateReservationFeedbackCommentRequest.params:type_name -> guest_proto.ReservationFeedbackCommentParams
	111, // 159: guest_proto.CreateReservationFeedbackCommentResponse.result:type_name -> guest_proto.ReservationFeedbackComment
	111, // 160: guest_proto.GetAllReservationFeedbackCommentsResponse.result:type_name -> guest_proto.ReservationFeedbackComment
	111, // 161: guest_proto.GetReservationFeedbackCommentByIDResponse.result:type_name -> guest_proto.ReservationFeedbackComment
	110, // 162: guest_proto.UpdateReservationFeedbackCommentRequest.params:type_name -> guest_proto.ReservationFeedbackCommentParams
	111, // 163: guest_proto.UpdateReservationFeedbackCommentResponse.result:type_name -> guest_proto.ReservationFeedbackComment
	24,  // 164: guest_proto.ReservationFeedbackSolution.creator:type_name -> guest_proto.CreatorProfile
	188, // 165: guest_proto.ReservationFeedbackSolution.createdAt:type_name -> google.protobuf.Timestamp
	188, // 166: guest_proto.ReservationFeedbackSolution.updatedAt:type_name -> google.protobuf.Timestamp
	121, // 167: guest_proto.AddReservationFeedbackSolutionRequest.params:type_name -> guest_proto.ReservationFeedbackSolutionParams
	120, // 168: guest_proto.AddReservationFeedbackSolutionResponse.result:type_name -> guest_proto.ReservationFeedbackSolution
	31,  // 169: guest_proto.DeleteReservationResponse.result:type_name -> guest_proto.Reservation
	62,  // 170: guest_proto.UpdateReservationNoteRequest.params:type_name -> guest_proto.ReservationNoteParams
	63,  // 171: guest_proto.UpdateReservationNoteResponse.result:type_name -> guest_proto.ReservationNote
	8,   // 172: guest_proto.UpdateGuestNoteRequest.params:type_name -> guest_proto.GuestNoteParams
	9,   // 173: guest_proto.UpdateGuestNoteResponse.result:type_name -> guest_proto.GuestNote
	24,  // 174: guest_proto.ReservationWaitlistNote.creator:type_name -> guest_proto.CreatorProfile
	188, // 175: guest_proto.ReservationWaitlistNote.createdAt:type_name -> google.protobuf.Timestamp
	188, // 176: guest_proto.ReservationWaitlistNote.updatedAt:type_name -> google.protobuf.Timestamp
	139, // 177: guest_proto.CreateWaitingReservationNoteResponse.result:type_name -> guest_proto.ReservationWaitlistNote
	80,  // 178: guest_proto.UpdateWaitingReservationDetailsRequest.params:type_name -> guest_proto.ReservationWaitlistParams
	79,  // 179: guest_proto.UpdateWaitingReservationDetailsResponse.result:type_name -> guest_proto.ReservationWaitlist
	139, // 180: guest_proto.UpdateWaitingReservationNoteResponse.result:type_name -> guest_proto.ReservationWaitlistNote
	24,  // 181: guest_proto.ReservationWaitlistLog.creator:type_name -> guest_proto.CreatorProfile
	188, // 182: guest_proto.ReservationWaitlistLog.createdAt:type_name -> google.protobuf.Timestamp
	188, // 183: guest_proto.ReservationWaitlistLog.updatedAt:type_name -> google.protobuf.Timestamp
	145, // 184: guest_proto.GetAllReservationWaitlistLogsResponse.result:type_name -> guest_proto.ReservationWaitlistLog
	34,  // 185: guest_proto.GetReservationOrderByReservationIDResponse.result:type_name -> guest_proto.ReservationOrder
	152, // 186: guest_proto.GetReservationsCoverFlowResponse.result:type_name -> guest_proto.CoverFlow
	153, // 187: guest_proto.CoverFlow.reservations:type_name -> guest_proto.CoverFlowReservation
	154, // 188: guest_proto.CoverFlowReservation.status:type_name -> guest_proto.CoverFlowReservationStatus
	31,  // 189: guest_proto.DeleteReservationNoteResponse.reservation:type_name -> guest_proto.Reservation
	161, // 190: guest_proto.CreateWidgetReservationRequest.guests:type_name -> guest_proto.WidgetGuestParams
	172, // 191: guest_proto.PaymentRequest.items:type_name -> guest_proto.PaymentItem
	170, // 192: guest_proto.PaymentResponse.branch:type_name -> guest_proto.PaymentBranch
	167, // 193: guest_proto.PaymentResponse.guest:type_name -> guest_proto.PaymentGuest
	171, // 194: guest_proto.PaymentResponse.invoice:type_name -> guest_proto.Invoice
	169, // 195: guest_proto.PaymentResponse.card:type_name -> guest_proto.PaymentCard
	172, // 196: guest_proto.Invoice.items:type_name -> guest_proto.PaymentItem
	168, // 197: guest_proto.GetPaymentByIDResponse.result:type_name -> guest_proto.PaymentResponse
	168, // 198: guest_proto.GetAllReservationPaymentsResponse.result:type_name -> guest_proto.PaymentResponse
	179, // 199: guest_proto.UpdatePaymentFromWebhookRequest.card:type_name -> guest_proto.CardInfo
	10,  // 200: guest_proto.guest.CreateGuest:input_type -> guest_proto.CreateGuestRequest
	12,  // 201: guest_proto.guest.GetAllGuests:input_type -> guest_proto.GetAllGuestsRequest
	14,  // 202: guest_proto.guest.GetGuestByID:input_type -> guest_proto.GetGuestByIDRequest
	16,  // 203: guest_proto.guest.UpdateGuest:input_type -> guest_proto.UpdateGuestRequest
	18,  // 204: guest_proto.guest.AddGuestNote:input_type -> guest_proto.AddGuestNoteRequest
	20,  // 205: guest_proto.guest.GetAllGuestFeedback:input_type -> guest_proto.GetAllGuestFeedbackRequest
	22,  // 206: guest_proto.guest.GetGuestUpcomingReservations:input_type -> guest_proto.GetGuestUpcomingReservationsRequest
	25,  // 207: guest_proto.guest.GetAllGuestReservations:input_type -> guest_proto.GetAllGuestReservationsRequest
	90,  // 208: guest_proto.guest.GetGuestStatistics:input_type -> guest_proto.GetGuestStatisticsRequest
	94,  // 209: guest_proto.guest.GetGuestSpending:input_type -> guest_proto.GetGuestSpendingRequest
	96,  // 210: guest_proto.guest.GetGuestReservationStatistics:input_type -> guest_proto.GetGuestReservationStatisticsRequest
	136, // 211: guest_proto.guest.UpdateGuestNote:input_type -> guest_proto.UpdateGuestNoteRequest
	157, // 212: guest_proto.guest.DeleteGuestNote:input_type -> guest_proto.DeleteGuestNoteRequest
	155, // 213: guest_proto.guest.ImportGuestsFromExcel:input_type -> guest_proto.ImportGuestsFromExcelRequest
	182, // 214: guest_proto.guest.AddReservationVisitors:input_type -> guest_proto.AddReservationVisitorsRequest
	184, // 215: guest_proto.guest.DeleteReservationVisitors:input_type -> guest_proto.DeleteReservationVisitorsRequest
	36,  // 216: guest_proto.reservation.CreateReservation:input_type -> guest_proto.CreateReservationRequest
	38,  // 217: guest_proto.reservation.GetAllReservations:input_type -> guest_proto.GetAllReservationsRequest
	40,  // 218: guest_proto.reservation.GetReservationByID:input_type -> guest_proto.GetReservationByIDRequest
	42,  // 219: guest_proto.reservation.UpdateReservation:input_type -> guest_proto.UpdateReservationRequest
	57,  // 220: guest_proto.reservation.GetAvailableTimes:input_type -> guest_proto.GetAvailableTimesRequest
	64,  // 221: guest_proto.reservation.AddReservationNote:input_type -> guest_proto.AddReservationNoteRequest
	76,  // 222: guest_proto.reservation.GetRealtimeReservations:input_type -> guest_proto.GetRealtimeReservationsRequest
	77,  // 223: guest_proto.reservation.UpdateReservationTable:input_type -> guest_proto.UpdateReservationTableRequest
	132, // 224: guest_proto.reservation.DeleteReservation:input_type -> guest_proto.DeleteReservationRequest
	134, // 225: guest_proto.reservation.UpdateReservationNote:input_type -> guest_proto.UpdateReservationNoteRequest
	148, // 226: guest_proto.reservation.GetReservationOrderByReservationID:input_type -> guest_proto.GetReservationOrderByReservationIDRequest
	159, // 227: guest_proto.reservation.DeleteReservationNote:input_type -> guest_proto.DeleteReservationNoteRequest
	150, // 228: guest_proto.reservation.GetReservationsCoverFlow:input_type -> guest_proto.GetReservationsCoverFlowRequest
	126, // 229: guest_proto.reservation.UpdateReservationFromWebhook:input_type -> guest_proto.UpdateReservationFromWebhookRequest
	189, // 230: guest_proto.reservation.GetAllBookedVia:input_type -> google.protobuf.Empty
	177, // 231: guest_proto.reservation.RequestReservationWebhook:input_type -> guest_proto.RequestReservationWebhookRequest
	74,  // 232: guest_proto.guestLog.GetAllGuestLogs:input_type -> guest_proto.GetAllGuestLogsRequest
	72,  // 233: guest_proto.reservationLog.GetAllReservationLogs:input_type -> guest_proto.GetAllReservationLogsRequest
	146, // 234: guest_proto.reservationLog.GetAllReservationWaitlistLogs:input_type -> guest_proto.GetAllReservationWaitlistLogsRequest
	189, // 235: guest_proto.reservationSpecialOccasion.GetAllSpecialOccasions:input_type -> google.protobuf.Empty
	164, // 236: guest_proto.reservationSpecialOccasion.GetWidgetAllSpecialOccasions:input_type -> guest_proto.GetWidgetAllSpecialOccasionsRequest
	101, // 237: guest_proto.reservationFeedback.CreateReservationFeedback:input_type -> guest_proto.CreateReservationFeedbackRequest
	103, // 238: guest_proto.reservationFeedback.GetAllReservationsFeedbacks:input_type -> guest_proto.GetAllReservationsFeedbacksRequest
	105, // 239: guest_proto.reservationFeedback.GetReservationFeedbackByID:input_type -> guest_proto.GetReservationFeedbackByIDRequest
	107, // 240: guest_proto.reservationFeedback.UpdateReservationFeedback:input_type -> guest_proto.UpdateReservationFeedbackRequest
	189, // 241: guest_proto.reservationFeedback.GetAllReservationFeedbackSections:input_type -> google.protobuf.Empty
	112, // 242: guest_proto.reservationFeedbackComment.CreateReservationFeedbackComment:input_type -> guest_proto.CreateReservationFeedbackCommentRequest
	114, // 243: guest_proto.reservationFeedbackComment.GetAllReservationFeedbackComments:input_type -> guest_proto.GetAllReservationFeedbackCommentsRequest
	118, // 244: guest_proto.reservationFeedbackComment.UpdateReservationFeedbackComment:input_type -> guest_proto.UpdateReservationFeedbackCommentRequest
	122, // 245: guest_proto.reservationFeedbackComment.AddReservationFeedbackSolution:input_type -> guest_proto.AddReservationFeedbackSolutionRequest
	85,  // 246: guest_proto.reservationWaitlist.GetAllWaitingReservations:input_type -> guest_proto.GetWaitingReservationRequest
	81,  // 247: guest_proto.reservationWaitlist.CreateWaitingReservation:input_type -> guest_proto.CreateWaitingReservationRequest
	84,  // 248: guest_proto.reservationWaitlist.SeatWaitingReservation:input_type -> guest_proto.SeatWaitingReservationRequest
	85,  // 249: guest_proto.reservationWaitlist.GetRealtimeWaitingReservations:input_type -> guest_proto.GetWaitingReservationRequest
	141, // 250: guest_proto.reservationWaitlist.UpdateWaitingReservationDetails:input_type -> guest_proto.UpdateWaitingReservationDetailsRequest
	138, // 251: guest_proto.reservationWaitlist.CreateWaitingReservationNote:input_type -> guest_proto.CreateWaitingReservationNoteRequest
	143, // 252: guest_proto.reservationWaitlist.UpdateWaitingReservationNote:input_type -> guest_proto.UpdateWaitingReservationNoteRequest
	81,  // 253: guest_proto.reservationWaitlist.CreateDirectInReservation:input_type -> guest_proto.CreateWaitingReservationRequest
	124, // 254: guest_proto.reservationFeedbackWebhook.CreateReservationFeedbackFromWebhook:input_type -> guest_proto.CreateReservationFeedbackFromWebhookRequest
	128, // 255: guest_proto.dayOperations.CheckIfDayClosed:input_type -> guest_proto.CheckIfDayClosedRequest
	130, // 256: guest_proto.dayOperations.CloseDayOperations:input_type -> guest_proto.CloseDayOperationsRequest
	59,  // 257: guest_proto.reservationWidget.GetWidgetAvailableTimes:input_type -> guest_proto.GetWidgetAvailableTimesRequest
	162, // 258: guest_proto.reservationWidget.CreateWidgetReservation:input_type -> guest_proto.CreateWidgetReservationRequest
	166, // 259: guest_proto.payment.SendPaymentRequest:input_type -> guest_proto.PaymentRequest
	173, // 260: guest_proto.payment.GetPaymentByID:input_type -> guest_proto.GetPaymentByIDRequest
	175, // 261: guest_proto.payment.GetAllReservationPayments:input_type -> guest_proto.GetAllReservationPaymentsRequest
	180, // 262: guest_proto.payment.UpdatePaymentFromWebhook:input_type -> guest_proto.UpdatePaymentFromWebhookRequest
	186, // 263: guest_proto.payment.CancelPayment:input_type -> guest_proto.CancelPaymentRequest
	11,  // 264: guest_proto.guest.CreateGuest:output_type -> guest_proto.CreateGuestResponse
	13,  // 265: guest_proto.guest.GetAllGuests:output_type -> guest_proto.GetAllGuestsResponse
	15,  // 266: guest_proto.guest.GetGuestByID:output_type -> guest_proto.GetGuestByIDResponse
	17,  // 267: guest_proto.guest.UpdateGuest:output_type -> guest_proto.UpdateGuestResponse
	19,  // 268: guest_proto.guest.AddGuestNote:output_type -> guest_proto.AddGuestNoteResponse
	21,  // 269: guest_proto.guest.GetAllGuestFeedback:output_type -> guest_proto.GetAllGuestFeedbackResponse
	23,  // 270: guest_proto.guest.GetGuestUpcomingReservations:output_type -> guest_proto.GetGuestUpcomingReservationsResponse
	26,  // 271: guest_proto.guest.GetAllGuestReservations:output_type -> guest_proto.GetAllGuestReservationsResponse
	91,  // 272: guest_proto.guest.GetGuestStatistics:output_type -> guest_proto.GetGuestStatisticsResponse
	95,  // 273: guest_proto.guest.GetGuestSpending:output_type -> guest_proto.GetGuestSpendingResponse
	98,  // 274: guest_proto.guest.GetGuestReservationStatistics:output_type -> guest_proto.GetGuestReservationStatisticsResponse
	137, // 275: guest_proto.guest.UpdateGuestNote:output_type -> guest_proto.UpdateGuestNoteResponse
	158, // 276: guest_proto.guest.DeleteGuestNote:output_type -> guest_proto.DeleteGuestNoteResponse
	156, // 277: guest_proto.guest.ImportGuestsFromExcel:output_type -> guest_proto.ImportGuestsFromExcelResponse
	183, // 278: guest_proto.guest.AddReservationVisitors:output_type -> guest_proto.AddReservationVisitorsResponse
	185, // 279: guest_proto.guest.DeleteReservationVisitors:output_type -> guest_proto.DeleteReservationVisitorsResponse
	37,  // 280: guest_proto.reservation.CreateReservation:output_type -> guest_proto.CreateReservationResponse
	39,  // 281: guest_proto.reservation.GetAllReservations:output_type -> guest_proto.GetAllReservationsResponse
	41,  // 282: guest_proto.reservation.GetReservationByID:output_type -> guest_proto.GetReservationByIDResponse
	43,  // 283: guest_proto.reservation.UpdateReservation:output_type -> guest_proto.UpdateReservationResponse
	58,  // 284: guest_proto.reservation.GetAvailableTimes:output_type -> guest_proto.GetAvailableTimesResponse
	65,  // 285: guest_proto.reservation.AddReservationNote:output_type -> guest_proto.AddReservationNoteResponse
	41,  // 286: guest_proto.reservation.GetRealtimeReservations:output_type -> guest_proto.GetReservationByIDResponse
	78,  // 287: guest_proto.reservation.UpdateReservationTable:output_type -> guest_proto.UpdateReservationTableResponse
	133, // 288: guest_proto.reservation.DeleteReservation:output_type -> guest_proto.DeleteReservationResponse
	135, // 289: guest_proto.reservation.UpdateReservationNote:output_type -> guest_proto.UpdateReservationNoteResponse
	149, // 290: guest_proto.reservation.GetReservationOrderByReservationID:output_type -> guest_proto.GetReservationOrderByReservationIDResponse
	160, // 291: guest_proto.reservation.DeleteReservationNote:output_type -> guest_proto.DeleteReservationNoteResponse
	151, // 292: guest_proto.reservation.GetReservationsCoverFlow:output_type -> guest_proto.GetReservationsCoverFlowResponse
	127, // 293: guest_proto.reservation.UpdateReservationFromWebhook:output_type -> guest_proto.UpdateReservationFromWebhookResponse
	165, // 294: guest_proto.reservation.GetAllBookedVia:output_type -> guest_proto.GetAllBookedViaResponse
	178, // 295: guest_proto.reservation.RequestReservationWebhook:output_type -> guest_proto.RequestReservationWebhookResponse
	75,  // 296: guest_proto.guestLog.GetAllGuestLogs:output_type -> guest_proto.GetAllGuestLogsResponse
	73,  // 297: guest_proto.reservationLog.GetAllReservationLogs:output_type -> guest_proto.GetAllReservationLogsResponse
	147, // 298: guest_proto.reservationLog.GetAllReservationWaitlistLogs:output_type -> guest_proto.GetAllReservationWaitlistLogsResponse
	100, // 299: guest_proto.reservationSpecialOccasion.GetAllSpecialOccasions:output_type -> guest_proto.GetAllSpecialOccasionsResponse
	100, // 300: guest_proto.reservationSpecialOccasion.GetWidgetAllSpecialOccasions:output_type -> guest_proto.GetAllSpecialOccasionsResponse
	102, // 301: guest_proto.reservationFeedback.CreateReservationFeedback:output_type -> guest_proto.CreateReservationFeedbackResponse
	104, // 302: guest_proto.reservationFeedback.GetAllReservationsFeedbacks:output_type -> guest_proto.GetAllReservationsFeedbacksResponse
	106, // 303: guest_proto.reservationFeedback.GetReservationFeedbackByID:output_type -> guest_proto.GetReservationFeedbackByIDResponse
	108, // 304: guest_proto.reservationFeedback.UpdateReservationFeedback:output_type -> guest_proto.UpdateReservationFeedbackResponse
	109, // 305: guest_proto.reservationFeedback.GetAllReservationFeedbackSections:output_type -> guest_proto.GetAllReservationsFeedbackSectionsResponse
	113, // 306: guest_proto.reservationFeedbackComment.CreateReservationFeedbackComment:output_type -> guest_proto.CreateReservationFeedbackCommentResponse
	115, // 307: guest_proto.reservationFeedbackComment.GetAllReservationFeedbackComments:output_type -> guest_proto.GetAllReservationFeedbackCommentsResponse
	119, // 308: guest_proto.reservationFeedbackComment.UpdateReservationFeedbackComment:output_type -> guest_proto.UpdateReservationFeedbackCommentResponse
	123, // 309: guest_proto.reservationFeedbackComment.AddReservationFeedbackSolution:output_type -> guest_proto.AddReservationFeedbackSolutionResponse
	83,  // 310: guest_proto.reservationWaitlist.GetAllWaitingReservations:output_type -> guest_proto.GetWaitingReservationsResponse
	82,  // 311: guest_proto.reservationWaitlist.CreateWaitingReservation:output_type -> guest_proto.CreateWaitingReservationResponse
	87,  // 312: guest_proto.reservationWaitlist.SeatWaitingReservation:output_type -> guest_proto.SeatWaitingReservationResponse
	86,  // 313: guest_proto.reservationWaitlist.GetRealtimeWaitingReservations:output_type -> guest_proto.GetWaitingReservationResponse
	142, // 314: guest_proto.reservationWaitlist.UpdateWaitingReservationDetails:output_type -> guest_proto.UpdateWaitingReservationDetailsResponse
	140, // 315: guest_proto.reservationWaitlist.CreateWaitingReservationNote:output_type -> guest_proto.CreateWaitingReservationNoteResponse
	144, // 316: guest_proto.reservationWaitlist.UpdateWaitingReservationNote:output_type -> guest_proto.UpdateWaitingReservationNoteResponse
	37,  // 317: guest_proto.reservationWaitlist.CreateDirectInReservation:output_type -> guest_proto.CreateReservationResponse
	125, // 318: guest_proto.reservationFeedbackWebhook.CreateReservationFeedbackFromWebhook:output_type -> guest_proto.CreateReservationFeedbackFromWebhookResponse
	129, // 319: guest_proto.dayOperations.CheckIfDayClosed:output_type -> guest_proto.CheckIfDayClosedResponse
	131, // 320: guest_proto.dayOperations.CloseDayOperations:output_type -> guest_proto.CloseDayOperationsResponse
	60,  // 321: guest_proto.reservationWidget.GetWidgetAvailableTimes:output_type -> guest_proto.GetWidgetAvailableTimesResponse
	163, // 322: guest_proto.reservationWidget.CreateWidgetReservation:output_type -> guest_proto.CreateWidgetReservationResponse
	168, // 323: guest_proto.payment.SendPaymentRequest:output_type -> guest_proto.PaymentResponse
	174, // 324: guest_proto.payment.GetPaymentByID:output_type -> guest_proto.GetPaymentByIDResponse
	176, // 325: guest_proto.payment.GetAllReservationPayments:output_type -> guest_proto.GetAllReservationPaymentsResponse
	181, // 326: guest_proto.payment.UpdatePaymentFromWebhook:output_type -> guest_proto.UpdatePaymentFromWebhookResponse
	187, // 327: guest_proto.payment.CancelPayment:output_type -> guest_proto.CancelPaymentResponse
	264, // [264:328] is the sub-list for method output_type
	200, // [200:264] is the sub-list for method input_type
	200, // [200:200] is the sub-list for extension type_name
	200, // [200:200] is the sub-list for extension extendee
	0,   // [0:200] is the sub-list for field type_name
}

func init() { file_v1_guest_service_proto_init() }
func file_v1_guest_service_proto_init() {
	if File_v1_guest_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_guest_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagCategoryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestBranchVisits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestNoteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGuestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGuestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGuestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGuestNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGuestNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestFeedbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestUpcomingReservationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestUpcomingReservationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatorProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestReservationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestReservationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationGuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationShift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatingArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloorPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedbackSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationFeedbackShort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationFeedbackParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationSpecialOccasion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableTimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAvailableTimesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWidgetAvailableTimesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWidgetAvailableTimesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationNoteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReservationNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReservationNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationLogParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestLogParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllGuestLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRealtimeReservationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationWaitlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationWaitlistParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWaitingReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWaitingReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWaitingReservationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatWaitingReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWaitingReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWaitingReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatWaitingReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationStatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonthSpending); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YearSpending); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestSpendingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestSpendingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestReservationStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuestReservationStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGuestReservationStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecialOccasion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSpecialOccasionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationFeedbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationsFeedbacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationsFeedbacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationFeedbackByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationFeedbackByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationFeedbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationsFeedbackSectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationFeedbackCommentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationFeedbackComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationFeedbackCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationFeedbackCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationFeedbackCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationFeedbackCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationFeedbackCommentByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationFeedbackCommentByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationFeedbackCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationFeedbackCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationFeedbackSolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationFeedbackSolutionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReservationFeedbackSolutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReservationFeedbackSolutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationFeedbackFromWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReservationFeedbackFromWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationFromWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationFromWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIfDayClosedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIfDayClosedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseDayOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseDayOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReservationNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGuestNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGuestNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWaitingReservationNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationWaitlistNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWaitingReservationNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWaitingReservationDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWaitingReservationDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWaitingReservationNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWaitingReservationNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservationWaitlistLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationWaitlistLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationWaitlistLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationOrderByReservationIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationOrderByReservationIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationsCoverFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReservationsCoverFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoverFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoverFlowReservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoverFlowReservationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGuestsFromExcelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGuestsFromExcelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuestNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGuestNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReservationNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReservationNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetGuestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWidgetReservationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWidgetReservationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWidgetAllSpecialOccasionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBookedViaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentGuest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationPaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllReservationPaymentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestReservationWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestReservationWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentFromWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentFromWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReservationVisitorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReservationVisitorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReservationVisitorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReservationVisitorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_guest_service_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_guest_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   188,
			NumExtensions: 0,
			NumServices:   12,
		},
		GoTypes:           file_v1_guest_service_proto_goTypes,
		DependencyIndexes: file_v1_guest_service_proto_depIdxs,
		MessageInfos:      file_v1_guest_service_proto_msgTypes,
	}.Build()
	File_v1_guest_service_proto = out.File
	file_v1_guest_service_proto_rawDesc = nil
	file_v1_guest_service_proto_goTypes = nil
	file_v1_guest_service_proto_depIdxs = nil
}
